// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: temporal/api/schedule/v1/message.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Temporalio.Api.Schedule.V1 {

  /// <summary>Holder for reflection information generated from temporal/api/schedule/v1/message.proto</summary>
  public static partial class MessageReflection {

    #region Descriptor
    /// <summary>File descriptor for temporal/api/schedule/v1/message.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZ0ZW1wb3JhbC9hcGkvc2NoZWR1bGUvdjEvbWVzc2FnZS5wcm90bxIYdGVt",
            "cG9yYWwuYXBpLnNjaGVkdWxlLnYxGh5nb29nbGUvcHJvdG9idWYvZHVyYXRp",
            "b24ucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8aJHRl",
            "bXBvcmFsL2FwaS9jb21tb24vdjEvbWVzc2FnZS5wcm90bxokdGVtcG9yYWwv",
            "YXBpL2VudW1zL3YxL3NjaGVkdWxlLnByb3RvGiZ0ZW1wb3JhbC9hcGkvd29y",
            "a2Zsb3cvdjEvbWVzc2FnZS5wcm90byKVAQoMQ2FsZW5kYXJTcGVjEg4KBnNl",
            "Y29uZBgBIAEoCRIOCgZtaW51dGUYAiABKAkSDAoEaG91chgDIAEoCRIUCgxk",
            "YXlfb2ZfbW9udGgYBCABKAkSDQoFbW9udGgYBSABKAkSDAoEeWVhchgGIAEo",
            "CRITCgtkYXlfb2Zfd2VlaxgHIAEoCRIPCgdjb21tZW50GAggASgJIjEKBVJh",
            "bmdlEg0KBXN0YXJ0GAEgASgFEgsKA2VuZBgCIAEoBRIMCgRzdGVwGAMgASgF",
            "IoYDChZTdHJ1Y3R1cmVkQ2FsZW5kYXJTcGVjEi8KBnNlY29uZBgBIAMoCzIf",
            "LnRlbXBvcmFsLmFwaS5zY2hlZHVsZS52MS5SYW5nZRIvCgZtaW51dGUYAiAD",
            "KAsyHy50ZW1wb3JhbC5hcGkuc2NoZWR1bGUudjEuUmFuZ2USLQoEaG91chgD",
            "IAMoCzIfLnRlbXBvcmFsLmFwaS5zY2hlZHVsZS52MS5SYW5nZRI1CgxkYXlf",
            "b2ZfbW9udGgYBCADKAsyHy50ZW1wb3JhbC5hcGkuc2NoZWR1bGUudjEuUmFu",
            "Z2USLgoFbW9udGgYBSADKAsyHy50ZW1wb3JhbC5hcGkuc2NoZWR1bGUudjEu",
            "UmFuZ2USLQoEeWVhchgGIAMoCzIfLnRlbXBvcmFsLmFwaS5zY2hlZHVsZS52",
            "MS5SYW5nZRI0CgtkYXlfb2Zfd2VlaxgHIAMoCzIfLnRlbXBvcmFsLmFwaS5z",
            "Y2hlZHVsZS52MS5SYW5nZRIPCgdjb21tZW50GAggASgJImUKDEludGVydmFs",
            "U3BlYxIrCghpbnRlcnZhbBgBIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJh",
            "dGlvbhIoCgVwaGFzZRgCIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlv",
            "biK6BAoMU2NoZWR1bGVTcGVjEk0KE3N0cnVjdHVyZWRfY2FsZW5kYXIYByAD",
            "KAsyMC50ZW1wb3JhbC5hcGkuc2NoZWR1bGUudjEuU3RydWN0dXJlZENhbGVu",
            "ZGFyU3BlYxITCgtjcm9uX3N0cmluZxgIIAMoCRI4CghjYWxlbmRhchgBIAMo",
            "CzImLnRlbXBvcmFsLmFwaS5zY2hlZHVsZS52MS5DYWxlbmRhclNwZWMSOAoI",
            "aW50ZXJ2YWwYAiADKAsyJi50ZW1wb3JhbC5hcGkuc2NoZWR1bGUudjEuSW50",
            "ZXJ2YWxTcGVjEkQKEGV4Y2x1ZGVfY2FsZW5kYXIYAyADKAsyJi50ZW1wb3Jh",
            "bC5hcGkuc2NoZWR1bGUudjEuQ2FsZW5kYXJTcGVjQgIYARJVChtleGNsdWRl",
            "X3N0cnVjdHVyZWRfY2FsZW5kYXIYCSADKAsyMC50ZW1wb3JhbC5hcGkuc2No",
            "ZWR1bGUudjEuU3RydWN0dXJlZENhbGVuZGFyU3BlYxIuCgpzdGFydF90aW1l",
            "GAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIsCghlbmRfdGlt",
            "ZRgFIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASKQoGaml0dGVy",
            "GAYgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uEhUKDXRpbWV6b25l",
            "X25hbWUYCiABKAkSFQoNdGltZXpvbmVfZGF0YRgLIAEoDCKlAQoQU2NoZWR1",
            "bGVQb2xpY2llcxJECg5vdmVybGFwX3BvbGljeRgBIAEoDjIsLnRlbXBvcmFs",
            "LmFwaS5lbnVtcy52MS5TY2hlZHVsZU92ZXJsYXBQb2xpY3kSMQoOY2F0Y2h1",
            "cF93aW5kb3cYAiABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24SGAoQ",
            "cGF1c2Vfb25fZmFpbHVyZRgDIAEoCCJoCg5TY2hlZHVsZUFjdGlvbhJMCg5z",
            "dGFydF93b3JrZmxvdxgBIAEoCzIyLnRlbXBvcmFsLmFwaS53b3JrZmxvdy52",
            "MS5OZXdXb3JrZmxvd0V4ZWN1dGlvbkluZm9IAEIICgZhY3Rpb24ixAEKFFNj",
            "aGVkdWxlQWN0aW9uUmVzdWx0EjEKDXNjaGVkdWxlX3RpbWUYASABKAsyGi5n",
            "b29nbGUucHJvdG9idWYuVGltZXN0YW1wEi8KC2FjdHVhbF90aW1lGAIgASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBJIChVzdGFydF93b3JrZmxv",
            "d19yZXN1bHQYCyABKAsyKS50ZW1wb3JhbC5hcGkuY29tbW9uLnYxLldvcmtm",
            "bG93RXhlY3V0aW9uImIKDVNjaGVkdWxlU3RhdGUSDQoFbm90ZXMYASABKAkS",
            "DgoGcGF1c2VkGAIgASgIEhcKD2xpbWl0ZWRfYWN0aW9ucxgDIAEoCBIZChFy",
            "ZW1haW5pbmdfYWN0aW9ucxgEIAEoAyJhChlUcmlnZ2VySW1tZWRpYXRlbHlS",
            "ZXF1ZXN0EkQKDm92ZXJsYXBfcG9saWN5GAEgASgOMiwudGVtcG9yYWwuYXBp",
            "LmVudW1zLnYxLlNjaGVkdWxlT3ZlcmxhcFBvbGljeSK1AQoPQmFja2ZpbGxS",
            "ZXF1ZXN0Ei4KCnN0YXJ0X3RpbWUYASABKAsyGi5nb29nbGUucHJvdG9idWYu",
            "VGltZXN0YW1wEiwKCGVuZF90aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LlRpbWVzdGFtcBJECg5vdmVybGFwX3BvbGljeRgDIAEoDjIsLnRlbXBvcmFs",
            "LmFwaS5lbnVtcy52MS5TY2hlZHVsZU92ZXJsYXBQb2xpY3kixgEKDVNjaGVk",
            "dWxlUGF0Y2gSUAoTdHJpZ2dlcl9pbW1lZGlhdGVseRgBIAEoCzIzLnRlbXBv",
            "cmFsLmFwaS5zY2hlZHVsZS52MS5UcmlnZ2VySW1tZWRpYXRlbHlSZXF1ZXN0",
            "EkMKEGJhY2tmaWxsX3JlcXVlc3QYAiADKAsyKS50ZW1wb3JhbC5hcGkuc2No",
            "ZWR1bGUudjEuQmFja2ZpbGxSZXF1ZXN0Eg0KBXBhdXNlGAMgASgJEg8KB3Vu",
            "cGF1c2UYBCABKAki1gMKDFNjaGVkdWxlSW5mbxIUCgxhY3Rpb25fY291bnQY",
            "ASABKAMSHQoVbWlzc2VkX2NhdGNodXBfd2luZG93GAIgASgDEhcKD292ZXJs",
            "YXBfc2tpcHBlZBgDIAEoAxIWCg5idWZmZXJfZHJvcHBlZBgKIAEoAxITCgti",
            "dWZmZXJfc2l6ZRgLIAEoAxJEChFydW5uaW5nX3dvcmtmbG93cxgJIAMoCzIp",
            "LnRlbXBvcmFsLmFwaS5jb21tb24udjEuV29ya2Zsb3dFeGVjdXRpb24SRgoO",
            "cmVjZW50X2FjdGlvbnMYBCADKAsyLi50ZW1wb3JhbC5hcGkuc2NoZWR1bGUu",
            "djEuU2NoZWR1bGVBY3Rpb25SZXN1bHQSNwoTZnV0dXJlX2FjdGlvbl90aW1l",
            "cxgFIAMoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLwoLY3JlYXRl",
            "X3RpbWUYBiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi8KC3Vw",
            "ZGF0ZV90aW1lGAcgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIi",
            "ChZpbnZhbGlkX3NjaGVkdWxlX2Vycm9yGAggASgJQgIYASLwAQoIU2NoZWR1",
            "bGUSNAoEc3BlYxgBIAEoCzImLnRlbXBvcmFsLmFwaS5zY2hlZHVsZS52MS5T",
            "Y2hlZHVsZVNwZWMSOAoGYWN0aW9uGAIgASgLMigudGVtcG9yYWwuYXBpLnNj",
            "aGVkdWxlLnYxLlNjaGVkdWxlQWN0aW9uEjwKCHBvbGljaWVzGAMgASgLMiou",
            "dGVtcG9yYWwuYXBpLnNjaGVkdWxlLnYxLlNjaGVkdWxlUG9saWNpZXMSNgoF",
            "c3RhdGUYBCABKAsyJy50ZW1wb3JhbC5hcGkuc2NoZWR1bGUudjEuU2NoZWR1",
            "bGVTdGF0ZSKlAgoQU2NoZWR1bGVMaXN0SW5mbxI0CgRzcGVjGAEgASgLMiYu",
            "dGVtcG9yYWwuYXBpLnNjaGVkdWxlLnYxLlNjaGVkdWxlU3BlYxI7Cg13b3Jr",
            "Zmxvd190eXBlGAIgASgLMiQudGVtcG9yYWwuYXBpLmNvbW1vbi52MS5Xb3Jr",
            "Zmxvd1R5cGUSDQoFbm90ZXMYAyABKAkSDgoGcGF1c2VkGAQgASgIEkYKDnJl",
            "Y2VudF9hY3Rpb25zGAUgAygLMi4udGVtcG9yYWwuYXBpLnNjaGVkdWxlLnYx",
            "LlNjaGVkdWxlQWN0aW9uUmVzdWx0EjcKE2Z1dHVyZV9hY3Rpb25fdGltZXMY",
            "BiADKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wItMBChFTY2hlZHVs",
            "ZUxpc3RFbnRyeRITCgtzY2hlZHVsZV9pZBgBIAEoCRIqCgRtZW1vGAIgASgL",
            "MhwudGVtcG9yYWwuYXBpLmNvbW1vbi52MS5NZW1vEkMKEXNlYXJjaF9hdHRy",
            "aWJ1dGVzGAMgASgLMigudGVtcG9yYWwuYXBpLmNvbW1vbi52MS5TZWFyY2hB",
            "dHRyaWJ1dGVzEjgKBGluZm8YBCABKAsyKi50ZW1wb3JhbC5hcGkuc2NoZWR1",
            "bGUudjEuU2NoZWR1bGVMaXN0SW5mb0KTAQobaW8udGVtcG9yYWwuYXBpLnNj",
            "aGVkdWxlLnYxQgxNZXNzYWdlUHJvdG9QAVonZ28udGVtcG9yYWwuaW8vYXBp",
            "L3NjaGVkdWxlL3YxO3NjaGVkdWxlqgIaVGVtcG9yYWxpby5BcGkuU2NoZWR1",
            "bGUuVjHqAh1UZW1wb3JhbGlvOjpBcGk6OlNjaGVkdWxlOjpWMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Temporalio.Api.Common.V1.MessageReflection.Descriptor, global::Temporalio.Api.Enums.V1.ScheduleReflection.Descriptor, global::Temporalio.Api.Workflow.V1.MessageReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Temporalio.Api.Schedule.V1.CalendarSpec), global::Temporalio.Api.Schedule.V1.CalendarSpec.Parser, new[]{ "Second", "Minute", "Hour", "DayOfMonth", "Month", "Year", "DayOfWeek", "Comment" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Temporalio.Api.Schedule.V1.Range), global::Temporalio.Api.Schedule.V1.Range.Parser, new[]{ "Start", "End", "Step" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Temporalio.Api.Schedule.V1.StructuredCalendarSpec), global::Temporalio.Api.Schedule.V1.StructuredCalendarSpec.Parser, new[]{ "Second", "Minute", "Hour", "DayOfMonth", "Month", "Year", "DayOfWeek", "Comment" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Temporalio.Api.Schedule.V1.IntervalSpec), global::Temporalio.Api.Schedule.V1.IntervalSpec.Parser, new[]{ "Interval", "Phase" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Temporalio.Api.Schedule.V1.ScheduleSpec), global::Temporalio.Api.Schedule.V1.ScheduleSpec.Parser, new[]{ "StructuredCalendar", "CronString", "Calendar", "Interval", "ExcludeCalendar", "ExcludeStructuredCalendar", "StartTime", "EndTime", "Jitter", "TimezoneName", "TimezoneData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Temporalio.Api.Schedule.V1.SchedulePolicies), global::Temporalio.Api.Schedule.V1.SchedulePolicies.Parser, new[]{ "OverlapPolicy", "CatchupWindow", "PauseOnFailure" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Temporalio.Api.Schedule.V1.ScheduleAction), global::Temporalio.Api.Schedule.V1.ScheduleAction.Parser, new[]{ "StartWorkflow" }, new[]{ "Action" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Temporalio.Api.Schedule.V1.ScheduleActionResult), global::Temporalio.Api.Schedule.V1.ScheduleActionResult.Parser, new[]{ "ScheduleTime", "ActualTime", "StartWorkflowResult" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Temporalio.Api.Schedule.V1.ScheduleState), global::Temporalio.Api.Schedule.V1.ScheduleState.Parser, new[]{ "Notes", "Paused", "LimitedActions", "RemainingActions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Temporalio.Api.Schedule.V1.TriggerImmediatelyRequest), global::Temporalio.Api.Schedule.V1.TriggerImmediatelyRequest.Parser, new[]{ "OverlapPolicy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Temporalio.Api.Schedule.V1.BackfillRequest), global::Temporalio.Api.Schedule.V1.BackfillRequest.Parser, new[]{ "StartTime", "EndTime", "OverlapPolicy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Temporalio.Api.Schedule.V1.SchedulePatch), global::Temporalio.Api.Schedule.V1.SchedulePatch.Parser, new[]{ "TriggerImmediately", "BackfillRequest", "Pause", "Unpause" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Temporalio.Api.Schedule.V1.ScheduleInfo), global::Temporalio.Api.Schedule.V1.ScheduleInfo.Parser, new[]{ "ActionCount", "MissedCatchupWindow", "OverlapSkipped", "BufferDropped", "BufferSize", "RunningWorkflows", "RecentActions", "FutureActionTimes", "CreateTime", "UpdateTime", "InvalidScheduleError" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Temporalio.Api.Schedule.V1.Schedule), global::Temporalio.Api.Schedule.V1.Schedule.Parser, new[]{ "Spec", "Action", "Policies", "State" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Temporalio.Api.Schedule.V1.ScheduleListInfo), global::Temporalio.Api.Schedule.V1.ScheduleListInfo.Parser, new[]{ "Spec", "WorkflowType", "Notes", "Paused", "RecentActions", "FutureActionTimes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Temporalio.Api.Schedule.V1.ScheduleListEntry), global::Temporalio.Api.Schedule.V1.ScheduleListEntry.Parser, new[]{ "ScheduleId", "Memo", "SearchAttributes", "Info" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// CalendarSpec describes an event specification relative to the calendar,
  /// similar to a traditional cron specification, but with labeled fields. Each
  /// field can be one of:
  ///   *: matches always
  ///   x: matches when the field equals x
  ///   x/y : matches when the field equals x+n*y where n is an integer
  ///   x-z: matches when the field is between x and z inclusive
  ///   w,x,y,...: matches when the field is one of the listed values
  /// Each x, y, z, ... is either a decimal integer, or a month or day of week name
  /// or abbreviation (in the appropriate fields).
  /// A timestamp matches if all fields match.
  /// Note that fields have different default values, for convenience.
  /// Note that the special case that some cron implementations have for treating
  /// day_of_month and day_of_week as "or" instead of "and" when both are set is
  /// not implemented.
  /// day_of_week can accept 0 or 7 as Sunday
  /// CalendarSpec gets compiled into StructuredCalendarSpec, which is what will be
  /// returned if you describe the schedule.
  /// </summary>
  public sealed partial class CalendarSpec : pb::IMessage<CalendarSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CalendarSpec> _parser = new pb::MessageParser<CalendarSpec>(() => new CalendarSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CalendarSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Temporalio.Api.Schedule.V1.MessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CalendarSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CalendarSpec(CalendarSpec other) : this() {
      second_ = other.second_;
      minute_ = other.minute_;
      hour_ = other.hour_;
      dayOfMonth_ = other.dayOfMonth_;
      month_ = other.month_;
      year_ = other.year_;
      dayOfWeek_ = other.dayOfWeek_;
      comment_ = other.comment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CalendarSpec Clone() {
      return new CalendarSpec(this);
    }

    /// <summary>Field number for the "second" field.</summary>
    public const int SecondFieldNumber = 1;
    private string second_ = "";
    /// <summary>
    /// Expression to match seconds. Default: 0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Second {
      get { return second_; }
      set {
        second_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "minute" field.</summary>
    public const int MinuteFieldNumber = 2;
    private string minute_ = "";
    /// <summary>
    /// Expression to match minutes. Default: 0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Minute {
      get { return minute_; }
      set {
        minute_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hour" field.</summary>
    public const int HourFieldNumber = 3;
    private string hour_ = "";
    /// <summary>
    /// Expression to match hours. Default: 0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Hour {
      get { return hour_; }
      set {
        hour_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "day_of_month" field.</summary>
    public const int DayOfMonthFieldNumber = 4;
    private string dayOfMonth_ = "";
    /// <summary>
    /// Expression to match days of the month. Default: *
    /// (-- api-linter: core::0140::prepositions=disabled
    ///     aip.dev/not-precedent: standard name of field --)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DayOfMonth {
      get { return dayOfMonth_; }
      set {
        dayOfMonth_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "month" field.</summary>
    public const int MonthFieldNumber = 5;
    private string month_ = "";
    /// <summary>
    /// Expression to match months. Default: *
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Month {
      get { return month_; }
      set {
        month_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "year" field.</summary>
    public const int YearFieldNumber = 6;
    private string year_ = "";
    /// <summary>
    /// Expression to match years. Default: *
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "day_of_week" field.</summary>
    public const int DayOfWeekFieldNumber = 7;
    private string dayOfWeek_ = "";
    /// <summary>
    /// Expression to match days of the week. Default: *
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DayOfWeek {
      get { return dayOfWeek_; }
      set {
        dayOfWeek_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 8;
    private string comment_ = "";
    /// <summary>
    /// Free-form comment describing the intention of this spec.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comment {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CalendarSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CalendarSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Second != other.Second) return false;
      if (Minute != other.Minute) return false;
      if (Hour != other.Hour) return false;
      if (DayOfMonth != other.DayOfMonth) return false;
      if (Month != other.Month) return false;
      if (Year != other.Year) return false;
      if (DayOfWeek != other.DayOfWeek) return false;
      if (Comment != other.Comment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Second.Length != 0) hash ^= Second.GetHashCode();
      if (Minute.Length != 0) hash ^= Minute.GetHashCode();
      if (Hour.Length != 0) hash ^= Hour.GetHashCode();
      if (DayOfMonth.Length != 0) hash ^= DayOfMonth.GetHashCode();
      if (Month.Length != 0) hash ^= Month.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (DayOfWeek.Length != 0) hash ^= DayOfWeek.GetHashCode();
      if (Comment.Length != 0) hash ^= Comment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Second.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Second);
      }
      if (Minute.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Minute);
      }
      if (Hour.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Hour);
      }
      if (DayOfMonth.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DayOfMonth);
      }
      if (Month.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Month);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Year);
      }
      if (DayOfWeek.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(DayOfWeek);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Second.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Second);
      }
      if (Minute.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Minute);
      }
      if (Hour.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Hour);
      }
      if (DayOfMonth.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DayOfMonth);
      }
      if (Month.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Month);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Year);
      }
      if (DayOfWeek.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(DayOfWeek);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Second.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Second);
      }
      if (Minute.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Minute);
      }
      if (Hour.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hour);
      }
      if (DayOfMonth.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DayOfMonth);
      }
      if (Month.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Month);
      }
      if (Year.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (DayOfWeek.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DayOfWeek);
      }
      if (Comment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CalendarSpec other) {
      if (other == null) {
        return;
      }
      if (other.Second.Length != 0) {
        Second = other.Second;
      }
      if (other.Minute.Length != 0) {
        Minute = other.Minute;
      }
      if (other.Hour.Length != 0) {
        Hour = other.Hour;
      }
      if (other.DayOfMonth.Length != 0) {
        DayOfMonth = other.DayOfMonth;
      }
      if (other.Month.Length != 0) {
        Month = other.Month;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      if (other.DayOfWeek.Length != 0) {
        DayOfWeek = other.DayOfWeek;
      }
      if (other.Comment.Length != 0) {
        Comment = other.Comment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Second = input.ReadString();
            break;
          }
          case 18: {
            Minute = input.ReadString();
            break;
          }
          case 26: {
            Hour = input.ReadString();
            break;
          }
          case 34: {
            DayOfMonth = input.ReadString();
            break;
          }
          case 42: {
            Month = input.ReadString();
            break;
          }
          case 50: {
            Year = input.ReadString();
            break;
          }
          case 58: {
            DayOfWeek = input.ReadString();
            break;
          }
          case 66: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Second = input.ReadString();
            break;
          }
          case 18: {
            Minute = input.ReadString();
            break;
          }
          case 26: {
            Hour = input.ReadString();
            break;
          }
          case 34: {
            DayOfMonth = input.ReadString();
            break;
          }
          case 42: {
            Month = input.ReadString();
            break;
          }
          case 50: {
            Year = input.ReadString();
            break;
          }
          case 58: {
            DayOfWeek = input.ReadString();
            break;
          }
          case 66: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Range represents a set of integer values, used to match fields of a calendar
  /// time in StructuredCalendarSpec. If end &lt; start, then end is interpreted as
  /// equal to start. This means you can use a Range with start set to a value, and
  /// end and step unset (defaulting to 0) to represent a single value.
  /// </summary>
  public sealed partial class Range : pb::IMessage<Range>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Range> _parser = new pb::MessageParser<Range>(() => new Range());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Range> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Temporalio.Api.Schedule.V1.MessageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Range() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Range(Range other) : this() {
      start_ = other.start_;
      end_ = other.end_;
      step_ = other.step_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Range Clone() {
      return new Range(this);
    }

    /// <summary>Field number for the "start" field.</summary>
    public const int StartFieldNumber = 1;
    private int start_;
    /// <summary>
    /// Start of range (inclusive).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Start {
      get { return start_; }
      set {
        start_ = value;
      }
    }

    /// <summary>Field number for the "end" field.</summary>
    public const int EndFieldNumber = 2;
    private int end_;
    /// <summary>
    /// End of range (inclusive).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int End {
      get { return end_; }
      set {
        end_ = value;
      }
    }

    /// <summary>Field number for the "step" field.</summary>
    public const int StepFieldNumber = 3;
    private int step_;
    /// <summary>
    /// Step (optional, default 1).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Step {
      get { return step_; }
      set {
        step_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Range);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Range other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Start != other.Start) return false;
      if (End != other.End) return false;
      if (Step != other.Step) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Start != 0) hash ^= Start.GetHashCode();
      if (End != 0) hash ^= End.GetHashCode();
      if (Step != 0) hash ^= Step.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Start != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Start);
      }
      if (End != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(End);
      }
      if (Step != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Step);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Start != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Start);
      }
      if (End != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(End);
      }
      if (Step != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Step);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Start != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Start);
      }
      if (End != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(End);
      }
      if (Step != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Step);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Range other) {
      if (other == null) {
        return;
      }
      if (other.Start != 0) {
        Start = other.Start;
      }
      if (other.End != 0) {
        End = other.End;
      }
      if (other.Step != 0) {
        Step = other.Step;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Start = input.ReadInt32();
            break;
          }
          case 16: {
            End = input.ReadInt32();
            break;
          }
          case 24: {
            Step = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Start = input.ReadInt32();
            break;
          }
          case 16: {
            End = input.ReadInt32();
            break;
          }
          case 24: {
            Step = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// StructuredCalendarSpec describes an event specification relative to the
  /// calendar, in a form that's easy to work with programmatically. Each field can
  /// be one or more ranges.
  /// A timestamp matches if at least one range of each field matches the
  /// corresponding fields of the timestamp, except for year: if year is missing,
  /// that means all years match. For all fields besides year, at least one Range
  /// must be present to match anything.
  /// TODO: add relative-to-end-of-month
  /// TODO: add nth day-of-week in month
  /// </summary>
  public sealed partial class StructuredCalendarSpec : pb::IMessage<StructuredCalendarSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StructuredCalendarSpec> _parser = new pb::MessageParser<StructuredCalendarSpec>(() => new StructuredCalendarSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StructuredCalendarSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Temporalio.Api.Schedule.V1.MessageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StructuredCalendarSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StructuredCalendarSpec(StructuredCalendarSpec other) : this() {
      second_ = other.second_.Clone();
      minute_ = other.minute_.Clone();
      hour_ = other.hour_.Clone();
      dayOfMonth_ = other.dayOfMonth_.Clone();
      month_ = other.month_.Clone();
      year_ = other.year_.Clone();
      dayOfWeek_ = other.dayOfWeek_.Clone();
      comment_ = other.comment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StructuredCalendarSpec Clone() {
      return new StructuredCalendarSpec(this);
    }

    /// <summary>Field number for the "second" field.</summary>
    public const int SecondFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Temporalio.Api.Schedule.V1.Range> _repeated_second_codec
        = pb::FieldCodec.ForMessage(10, global::Temporalio.Api.Schedule.V1.Range.Parser);
    private readonly pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.Range> second_ = new pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.Range>();
    /// <summary>
    /// Match seconds (0-59)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.Range> Second {
      get { return second_; }
    }

    /// <summary>Field number for the "minute" field.</summary>
    public const int MinuteFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Temporalio.Api.Schedule.V1.Range> _repeated_minute_codec
        = pb::FieldCodec.ForMessage(18, global::Temporalio.Api.Schedule.V1.Range.Parser);
    private readonly pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.Range> minute_ = new pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.Range>();
    /// <summary>
    /// Match minutes (0-59)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.Range> Minute {
      get { return minute_; }
    }

    /// <summary>Field number for the "hour" field.</summary>
    public const int HourFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Temporalio.Api.Schedule.V1.Range> _repeated_hour_codec
        = pb::FieldCodec.ForMessage(26, global::Temporalio.Api.Schedule.V1.Range.Parser);
    private readonly pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.Range> hour_ = new pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.Range>();
    /// <summary>
    /// Match hours (0-23)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.Range> Hour {
      get { return hour_; }
    }

    /// <summary>Field number for the "day_of_month" field.</summary>
    public const int DayOfMonthFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Temporalio.Api.Schedule.V1.Range> _repeated_dayOfMonth_codec
        = pb::FieldCodec.ForMessage(34, global::Temporalio.Api.Schedule.V1.Range.Parser);
    private readonly pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.Range> dayOfMonth_ = new pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.Range>();
    /// <summary>
    /// Match days of the month (1-31)
    /// (-- api-linter: core::0140::prepositions=disabled
    ///     aip.dev/not-precedent: standard name of field --)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.Range> DayOfMonth {
      get { return dayOfMonth_; }
    }

    /// <summary>Field number for the "month" field.</summary>
    public const int MonthFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Temporalio.Api.Schedule.V1.Range> _repeated_month_codec
        = pb::FieldCodec.ForMessage(42, global::Temporalio.Api.Schedule.V1.Range.Parser);
    private readonly pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.Range> month_ = new pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.Range>();
    /// <summary>
    /// Match months (1-12)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.Range> Month {
      get { return month_; }
    }

    /// <summary>Field number for the "year" field.</summary>
    public const int YearFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Temporalio.Api.Schedule.V1.Range> _repeated_year_codec
        = pb::FieldCodec.ForMessage(50, global::Temporalio.Api.Schedule.V1.Range.Parser);
    private readonly pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.Range> year_ = new pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.Range>();
    /// <summary>
    /// Match years.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.Range> Year {
      get { return year_; }
    }

    /// <summary>Field number for the "day_of_week" field.</summary>
    public const int DayOfWeekFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Temporalio.Api.Schedule.V1.Range> _repeated_dayOfWeek_codec
        = pb::FieldCodec.ForMessage(58, global::Temporalio.Api.Schedule.V1.Range.Parser);
    private readonly pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.Range> dayOfWeek_ = new pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.Range>();
    /// <summary>
    /// Match days of the week (0-6; 0 is Sunday).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.Range> DayOfWeek {
      get { return dayOfWeek_; }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 8;
    private string comment_ = "";
    /// <summary>
    /// Free-form comment describing the intention of this spec.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comment {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StructuredCalendarSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StructuredCalendarSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!second_.Equals(other.second_)) return false;
      if(!minute_.Equals(other.minute_)) return false;
      if(!hour_.Equals(other.hour_)) return false;
      if(!dayOfMonth_.Equals(other.dayOfMonth_)) return false;
      if(!month_.Equals(other.month_)) return false;
      if(!year_.Equals(other.year_)) return false;
      if(!dayOfWeek_.Equals(other.dayOfWeek_)) return false;
      if (Comment != other.Comment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= second_.GetHashCode();
      hash ^= minute_.GetHashCode();
      hash ^= hour_.GetHashCode();
      hash ^= dayOfMonth_.GetHashCode();
      hash ^= month_.GetHashCode();
      hash ^= year_.GetHashCode();
      hash ^= dayOfWeek_.GetHashCode();
      if (Comment.Length != 0) hash ^= Comment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      second_.WriteTo(output, _repeated_second_codec);
      minute_.WriteTo(output, _repeated_minute_codec);
      hour_.WriteTo(output, _repeated_hour_codec);
      dayOfMonth_.WriteTo(output, _repeated_dayOfMonth_codec);
      month_.WriteTo(output, _repeated_month_codec);
      year_.WriteTo(output, _repeated_year_codec);
      dayOfWeek_.WriteTo(output, _repeated_dayOfWeek_codec);
      if (Comment.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      second_.WriteTo(ref output, _repeated_second_codec);
      minute_.WriteTo(ref output, _repeated_minute_codec);
      hour_.WriteTo(ref output, _repeated_hour_codec);
      dayOfMonth_.WriteTo(ref output, _repeated_dayOfMonth_codec);
      month_.WriteTo(ref output, _repeated_month_codec);
      year_.WriteTo(ref output, _repeated_year_codec);
      dayOfWeek_.WriteTo(ref output, _repeated_dayOfWeek_codec);
      if (Comment.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += second_.CalculateSize(_repeated_second_codec);
      size += minute_.CalculateSize(_repeated_minute_codec);
      size += hour_.CalculateSize(_repeated_hour_codec);
      size += dayOfMonth_.CalculateSize(_repeated_dayOfMonth_codec);
      size += month_.CalculateSize(_repeated_month_codec);
      size += year_.CalculateSize(_repeated_year_codec);
      size += dayOfWeek_.CalculateSize(_repeated_dayOfWeek_codec);
      if (Comment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StructuredCalendarSpec other) {
      if (other == null) {
        return;
      }
      second_.Add(other.second_);
      minute_.Add(other.minute_);
      hour_.Add(other.hour_);
      dayOfMonth_.Add(other.dayOfMonth_);
      month_.Add(other.month_);
      year_.Add(other.year_);
      dayOfWeek_.Add(other.dayOfWeek_);
      if (other.Comment.Length != 0) {
        Comment = other.Comment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            second_.AddEntriesFrom(input, _repeated_second_codec);
            break;
          }
          case 18: {
            minute_.AddEntriesFrom(input, _repeated_minute_codec);
            break;
          }
          case 26: {
            hour_.AddEntriesFrom(input, _repeated_hour_codec);
            break;
          }
          case 34: {
            dayOfMonth_.AddEntriesFrom(input, _repeated_dayOfMonth_codec);
            break;
          }
          case 42: {
            month_.AddEntriesFrom(input, _repeated_month_codec);
            break;
          }
          case 50: {
            year_.AddEntriesFrom(input, _repeated_year_codec);
            break;
          }
          case 58: {
            dayOfWeek_.AddEntriesFrom(input, _repeated_dayOfWeek_codec);
            break;
          }
          case 66: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            second_.AddEntriesFrom(ref input, _repeated_second_codec);
            break;
          }
          case 18: {
            minute_.AddEntriesFrom(ref input, _repeated_minute_codec);
            break;
          }
          case 26: {
            hour_.AddEntriesFrom(ref input, _repeated_hour_codec);
            break;
          }
          case 34: {
            dayOfMonth_.AddEntriesFrom(ref input, _repeated_dayOfMonth_codec);
            break;
          }
          case 42: {
            month_.AddEntriesFrom(ref input, _repeated_month_codec);
            break;
          }
          case 50: {
            year_.AddEntriesFrom(ref input, _repeated_year_codec);
            break;
          }
          case 58: {
            dayOfWeek_.AddEntriesFrom(ref input, _repeated_dayOfWeek_codec);
            break;
          }
          case 66: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// IntervalSpec matches times that can be expressed as:
  /// epoch + n * interval + phase
  /// where n is an integer.
  /// phase defaults to zero if missing. interval is required.
  /// Both interval and phase must be non-negative and are truncated to the nearest
  /// second before any calculations.
  /// For example, an interval of 1 hour with phase of zero would match every hour,
  /// on the hour. The same interval but a phase of 19 minutes would match every
  /// xx:19:00. An interval of 28 days with phase zero would match
  /// 2022-02-17T00:00:00Z (among other times). The same interval with a phase of 3
  /// days, 5 hours, and 23 minutes would match 2022-02-20T05:23:00Z instead.
  /// </summary>
  public sealed partial class IntervalSpec : pb::IMessage<IntervalSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IntervalSpec> _parser = new pb::MessageParser<IntervalSpec>(() => new IntervalSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<IntervalSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Temporalio.Api.Schedule.V1.MessageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IntervalSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IntervalSpec(IntervalSpec other) : this() {
      interval_ = other.interval_ != null ? other.interval_.Clone() : null;
      phase_ = other.phase_ != null ? other.phase_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IntervalSpec Clone() {
      return new IntervalSpec(this);
    }

    /// <summary>Field number for the "interval" field.</summary>
    public const int IntervalFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Duration interval_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration Interval {
      get { return interval_; }
      set {
        interval_ = value;
      }
    }

    /// <summary>Field number for the "phase" field.</summary>
    public const int PhaseFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Duration phase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration Phase {
      get { return phase_; }
      set {
        phase_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as IntervalSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(IntervalSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Interval, other.Interval)) return false;
      if (!object.Equals(Phase, other.Phase)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (interval_ != null) hash ^= Interval.GetHashCode();
      if (phase_ != null) hash ^= Phase.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (interval_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Interval);
      }
      if (phase_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Phase);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (interval_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Interval);
      }
      if (phase_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Phase);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (interval_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Interval);
      }
      if (phase_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Phase);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(IntervalSpec other) {
      if (other == null) {
        return;
      }
      if (other.interval_ != null) {
        if (interval_ == null) {
          Interval = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        Interval.MergeFrom(other.Interval);
      }
      if (other.phase_ != null) {
        if (phase_ == null) {
          Phase = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        Phase.MergeFrom(other.Phase);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (interval_ == null) {
              Interval = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Interval);
            break;
          }
          case 18: {
            if (phase_ == null) {
              Phase = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Phase);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (interval_ == null) {
              Interval = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Interval);
            break;
          }
          case 18: {
            if (phase_ == null) {
              Phase = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Phase);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// ScheduleSpec is a complete description of a set of absolute timestamps
  /// (possibly infinite) that an action should occur at. The meaning of a
  /// ScheduleSpec depends only on its contents and never changes, except that the
  /// definition of a time zone can change over time (most commonly, when daylight
  /// saving time policy changes for an area). To create a totally self-contained
  /// ScheduleSpec, use UTC or include timezone_data.
  ///
  /// For input, you can provide zero or more of: structured_calendar, calendar,
  /// cron_string, interval, and exclude_structured_calendar, and all of them will
  /// be used (the schedule will take action at the union of all of their times,
  /// minus the ones that match exclude_structured_calendar).
  ///
  /// On input, calendar and cron_string fields will be compiled into
  /// structured_calendar (and maybe interval and timezone_name), so if you
  /// Describe a schedule, you'll see only structured_calendar, interval, etc.
  ///
  /// If a spec has no matching times after the current time, then the schedule
  /// will be subject to automatic deletion (after several days).
  /// </summary>
  public sealed partial class ScheduleSpec : pb::IMessage<ScheduleSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScheduleSpec> _parser = new pb::MessageParser<ScheduleSpec>(() => new ScheduleSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScheduleSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Temporalio.Api.Schedule.V1.MessageReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleSpec(ScheduleSpec other) : this() {
      structuredCalendar_ = other.structuredCalendar_.Clone();
      cronString_ = other.cronString_.Clone();
      calendar_ = other.calendar_.Clone();
      interval_ = other.interval_.Clone();
      excludeCalendar_ = other.excludeCalendar_.Clone();
      excludeStructuredCalendar_ = other.excludeStructuredCalendar_.Clone();
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      jitter_ = other.jitter_ != null ? other.jitter_.Clone() : null;
      timezoneName_ = other.timezoneName_;
      timezoneData_ = other.timezoneData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleSpec Clone() {
      return new ScheduleSpec(this);
    }

    /// <summary>Field number for the "structured_calendar" field.</summary>
    public const int StructuredCalendarFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Temporalio.Api.Schedule.V1.StructuredCalendarSpec> _repeated_structuredCalendar_codec
        = pb::FieldCodec.ForMessage(58, global::Temporalio.Api.Schedule.V1.StructuredCalendarSpec.Parser);
    private readonly pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.StructuredCalendarSpec> structuredCalendar_ = new pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.StructuredCalendarSpec>();
    /// <summary>
    /// Calendar-based specifications of times.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.StructuredCalendarSpec> StructuredCalendar {
      get { return structuredCalendar_; }
    }

    /// <summary>Field number for the "cron_string" field.</summary>
    public const int CronStringFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _repeated_cronString_codec
        = pb::FieldCodec.ForString(66);
    private readonly pbc::RepeatedField<string> cronString_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// cron_string holds a traditional cron specification as a string. It
    /// accepts 5, 6, or 7 fields, separated by spaces, and interprets them the
    /// same way as CalendarSpec.
    /// 5 fields:         minute, hour, day_of_month, month, day_of_week
    /// 6 fields:         minute, hour, day_of_month, month, day_of_week, year
    /// 7 fields: second, minute, hour, day_of_month, month, day_of_week, year
    /// If year is not given, it defaults to *. If second is not given, it
    /// defaults to 0.
    /// Shorthands @yearly, @monthly, @weekly, @daily, and @hourly are also
    /// accepted instead of the 5-7 time fields.
    /// Optionally, the string can be preceded by CRON_TZ=&lt;timezone name> or
    /// TZ=&lt;timezone name>, which will get copied to timezone_name. (There must
    /// not also be a timezone_name present.)
    /// Optionally "#" followed by a comment can appear at the end of the string.
    /// Note that the special case that some cron implementations have for
    /// treating day_of_month and day_of_week as "or" instead of "and" when both
    /// are set is not implemented.
    /// @every &lt;interval>[/&lt;phase>] is accepted and gets compiled into an
    /// IntervalSpec instead. &lt;interval> and &lt;phase> should be a decimal integer
    /// with a unit suffix s, m, h, or d.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> CronString {
      get { return cronString_; }
    }

    /// <summary>Field number for the "calendar" field.</summary>
    public const int CalendarFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Temporalio.Api.Schedule.V1.CalendarSpec> _repeated_calendar_codec
        = pb::FieldCodec.ForMessage(10, global::Temporalio.Api.Schedule.V1.CalendarSpec.Parser);
    private readonly pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.CalendarSpec> calendar_ = new pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.CalendarSpec>();
    /// <summary>
    /// Calendar-based specifications of times.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.CalendarSpec> Calendar {
      get { return calendar_; }
    }

    /// <summary>Field number for the "interval" field.</summary>
    public const int IntervalFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Temporalio.Api.Schedule.V1.IntervalSpec> _repeated_interval_codec
        = pb::FieldCodec.ForMessage(18, global::Temporalio.Api.Schedule.V1.IntervalSpec.Parser);
    private readonly pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.IntervalSpec> interval_ = new pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.IntervalSpec>();
    /// <summary>
    /// Interval-based specifications of times.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.IntervalSpec> Interval {
      get { return interval_; }
    }

    /// <summary>Field number for the "exclude_calendar" field.</summary>
    public const int ExcludeCalendarFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Temporalio.Api.Schedule.V1.CalendarSpec> _repeated_excludeCalendar_codec
        = pb::FieldCodec.ForMessage(26, global::Temporalio.Api.Schedule.V1.CalendarSpec.Parser);
    private readonly pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.CalendarSpec> excludeCalendar_ = new pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.CalendarSpec>();
    /// <summary>
    /// Any timestamps matching any of exclude_* will be skipped.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.CalendarSpec> ExcludeCalendar {
      get { return excludeCalendar_; }
    }

    /// <summary>Field number for the "exclude_structured_calendar" field.</summary>
    public const int ExcludeStructuredCalendarFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Temporalio.Api.Schedule.V1.StructuredCalendarSpec> _repeated_excludeStructuredCalendar_codec
        = pb::FieldCodec.ForMessage(74, global::Temporalio.Api.Schedule.V1.StructuredCalendarSpec.Parser);
    private readonly pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.StructuredCalendarSpec> excludeStructuredCalendar_ = new pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.StructuredCalendarSpec>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.StructuredCalendarSpec> ExcludeStructuredCalendar {
      get { return excludeStructuredCalendar_; }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// If start_time is set, any timestamps before start_time will be skipped.
    /// (Together, start_time and end_time make an inclusive interval.)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// If end_time is set, any timestamps after end_time will be skipped.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "jitter" field.</summary>
    public const int JitterFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Duration jitter_;
    /// <summary>
    /// All timestamps will be incremented by a random value from 0 to this
    /// amount of jitter. Default: 0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration Jitter {
      get { return jitter_; }
      set {
        jitter_ = value;
      }
    }

    /// <summary>Field number for the "timezone_name" field.</summary>
    public const int TimezoneNameFieldNumber = 10;
    private string timezoneName_ = "";
    /// <summary>
    /// Time zone to interpret all calendar-based specs in.
    ///
    /// If unset, defaults to UTC. We recommend using UTC for your application if
    /// at all possible, to avoid various surprising properties of time zones.
    ///
    /// Time zones may be provided by name, corresponding to names in the IANA
    /// time zone database (see https://www.iana.org/time-zones). The definition
    /// will be loaded by the Temporal server from the environment it runs in.
    ///
    /// If your application requires more control over the time zone definition
    /// used, it may pass in a complete definition in the form of a TZif file
    /// from the time zone database. If present, this will be used instead of
    /// loading anything from the environment. You are then responsible for
    /// updating timezone_data when the definition changes.
    ///
    /// Calendar spec matching is based on literal matching of the clock time
    /// with no special handling of DST: if you write a calendar spec that fires
    /// at 2:30am and specify a time zone that follows DST, that action will not
    /// be triggered on the day that has no 2:30am. Similarly, an action that
    /// fires at 1:30am will be triggered twice on the day that has two 1:30s.
    ///
    /// Also note that no actions are taken on leap-seconds (e.g. 23:59:60 UTC).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TimezoneName {
      get { return timezoneName_; }
      set {
        timezoneName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timezone_data" field.</summary>
    public const int TimezoneDataFieldNumber = 11;
    private pb::ByteString timezoneData_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString TimezoneData {
      get { return timezoneData_; }
      set {
        timezoneData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScheduleSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScheduleSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!structuredCalendar_.Equals(other.structuredCalendar_)) return false;
      if(!cronString_.Equals(other.cronString_)) return false;
      if(!calendar_.Equals(other.calendar_)) return false;
      if(!interval_.Equals(other.interval_)) return false;
      if(!excludeCalendar_.Equals(other.excludeCalendar_)) return false;
      if(!excludeStructuredCalendar_.Equals(other.excludeStructuredCalendar_)) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (!object.Equals(Jitter, other.Jitter)) return false;
      if (TimezoneName != other.TimezoneName) return false;
      if (TimezoneData != other.TimezoneData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= structuredCalendar_.GetHashCode();
      hash ^= cronString_.GetHashCode();
      hash ^= calendar_.GetHashCode();
      hash ^= interval_.GetHashCode();
      hash ^= excludeCalendar_.GetHashCode();
      hash ^= excludeStructuredCalendar_.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (jitter_ != null) hash ^= Jitter.GetHashCode();
      if (TimezoneName.Length != 0) hash ^= TimezoneName.GetHashCode();
      if (TimezoneData.Length != 0) hash ^= TimezoneData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      calendar_.WriteTo(output, _repeated_calendar_codec);
      interval_.WriteTo(output, _repeated_interval_codec);
      excludeCalendar_.WriteTo(output, _repeated_excludeCalendar_codec);
      if (startTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(EndTime);
      }
      if (jitter_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Jitter);
      }
      structuredCalendar_.WriteTo(output, _repeated_structuredCalendar_codec);
      cronString_.WriteTo(output, _repeated_cronString_codec);
      excludeStructuredCalendar_.WriteTo(output, _repeated_excludeStructuredCalendar_codec);
      if (TimezoneName.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(TimezoneName);
      }
      if (TimezoneData.Length != 0) {
        output.WriteRawTag(90);
        output.WriteBytes(TimezoneData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      calendar_.WriteTo(ref output, _repeated_calendar_codec);
      interval_.WriteTo(ref output, _repeated_interval_codec);
      excludeCalendar_.WriteTo(ref output, _repeated_excludeCalendar_codec);
      if (startTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(EndTime);
      }
      if (jitter_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Jitter);
      }
      structuredCalendar_.WriteTo(ref output, _repeated_structuredCalendar_codec);
      cronString_.WriteTo(ref output, _repeated_cronString_codec);
      excludeStructuredCalendar_.WriteTo(ref output, _repeated_excludeStructuredCalendar_codec);
      if (TimezoneName.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(TimezoneName);
      }
      if (TimezoneData.Length != 0) {
        output.WriteRawTag(90);
        output.WriteBytes(TimezoneData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += structuredCalendar_.CalculateSize(_repeated_structuredCalendar_codec);
      size += cronString_.CalculateSize(_repeated_cronString_codec);
      size += calendar_.CalculateSize(_repeated_calendar_codec);
      size += interval_.CalculateSize(_repeated_interval_codec);
      size += excludeCalendar_.CalculateSize(_repeated_excludeCalendar_codec);
      size += excludeStructuredCalendar_.CalculateSize(_repeated_excludeStructuredCalendar_codec);
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (jitter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Jitter);
      }
      if (TimezoneName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimezoneName);
      }
      if (TimezoneData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TimezoneData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScheduleSpec other) {
      if (other == null) {
        return;
      }
      structuredCalendar_.Add(other.structuredCalendar_);
      cronString_.Add(other.cronString_);
      calendar_.Add(other.calendar_);
      interval_.Add(other.interval_);
      excludeCalendar_.Add(other.excludeCalendar_);
      excludeStructuredCalendar_.Add(other.excludeStructuredCalendar_);
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      if (other.jitter_ != null) {
        if (jitter_ == null) {
          Jitter = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        Jitter.MergeFrom(other.Jitter);
      }
      if (other.TimezoneName.Length != 0) {
        TimezoneName = other.TimezoneName;
      }
      if (other.TimezoneData.Length != 0) {
        TimezoneData = other.TimezoneData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            calendar_.AddEntriesFrom(input, _repeated_calendar_codec);
            break;
          }
          case 18: {
            interval_.AddEntriesFrom(input, _repeated_interval_codec);
            break;
          }
          case 26: {
            excludeCalendar_.AddEntriesFrom(input, _repeated_excludeCalendar_codec);
            break;
          }
          case 34: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 42: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 50: {
            if (jitter_ == null) {
              Jitter = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Jitter);
            break;
          }
          case 58: {
            structuredCalendar_.AddEntriesFrom(input, _repeated_structuredCalendar_codec);
            break;
          }
          case 66: {
            cronString_.AddEntriesFrom(input, _repeated_cronString_codec);
            break;
          }
          case 74: {
            excludeStructuredCalendar_.AddEntriesFrom(input, _repeated_excludeStructuredCalendar_codec);
            break;
          }
          case 82: {
            TimezoneName = input.ReadString();
            break;
          }
          case 90: {
            TimezoneData = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            calendar_.AddEntriesFrom(ref input, _repeated_calendar_codec);
            break;
          }
          case 18: {
            interval_.AddEntriesFrom(ref input, _repeated_interval_codec);
            break;
          }
          case 26: {
            excludeCalendar_.AddEntriesFrom(ref input, _repeated_excludeCalendar_codec);
            break;
          }
          case 34: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 42: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 50: {
            if (jitter_ == null) {
              Jitter = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Jitter);
            break;
          }
          case 58: {
            structuredCalendar_.AddEntriesFrom(ref input, _repeated_structuredCalendar_codec);
            break;
          }
          case 66: {
            cronString_.AddEntriesFrom(ref input, _repeated_cronString_codec);
            break;
          }
          case 74: {
            excludeStructuredCalendar_.AddEntriesFrom(ref input, _repeated_excludeStructuredCalendar_codec);
            break;
          }
          case 82: {
            TimezoneName = input.ReadString();
            break;
          }
          case 90: {
            TimezoneData = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SchedulePolicies : pb::IMessage<SchedulePolicies>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SchedulePolicies> _parser = new pb::MessageParser<SchedulePolicies>(() => new SchedulePolicies());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SchedulePolicies> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Temporalio.Api.Schedule.V1.MessageReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SchedulePolicies() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SchedulePolicies(SchedulePolicies other) : this() {
      overlapPolicy_ = other.overlapPolicy_;
      catchupWindow_ = other.catchupWindow_ != null ? other.catchupWindow_.Clone() : null;
      pauseOnFailure_ = other.pauseOnFailure_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SchedulePolicies Clone() {
      return new SchedulePolicies(this);
    }

    /// <summary>Field number for the "overlap_policy" field.</summary>
    public const int OverlapPolicyFieldNumber = 1;
    private global::Temporalio.Api.Enums.V1.ScheduleOverlapPolicy overlapPolicy_ = global::Temporalio.Api.Enums.V1.ScheduleOverlapPolicy.Unspecified;
    /// <summary>
    /// Policy for overlaps.
    /// Note that this can be changed after a schedule has taken some actions,
    /// and some changes might produce unintuitive results. In general, the later
    /// policy overrides the earlier policy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Temporalio.Api.Enums.V1.ScheduleOverlapPolicy OverlapPolicy {
      get { return overlapPolicy_; }
      set {
        overlapPolicy_ = value;
      }
    }

    /// <summary>Field number for the "catchup_window" field.</summary>
    public const int CatchupWindowFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Duration catchupWindow_;
    /// <summary>
    /// Policy for catchups:
    /// If the Temporal server misses an action due to one or more components
    /// being down, and comes back up, the action will be run if the scheduled
    /// time is within this window from the current time.
    /// This value defaults to one year, and can't be less than 10 seconds.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration CatchupWindow {
      get { return catchupWindow_; }
      set {
        catchupWindow_ = value;
      }
    }

    /// <summary>Field number for the "pause_on_failure" field.</summary>
    public const int PauseOnFailureFieldNumber = 3;
    private bool pauseOnFailure_;
    /// <summary>
    /// If true, and a workflow run fails or times out, turn on "paused".
    /// This applies after retry policies: the full chain of retries must fail to
    /// trigger a pause here.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PauseOnFailure {
      get { return pauseOnFailure_; }
      set {
        pauseOnFailure_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SchedulePolicies);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SchedulePolicies other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OverlapPolicy != other.OverlapPolicy) return false;
      if (!object.Equals(CatchupWindow, other.CatchupWindow)) return false;
      if (PauseOnFailure != other.PauseOnFailure) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (OverlapPolicy != global::Temporalio.Api.Enums.V1.ScheduleOverlapPolicy.Unspecified) hash ^= OverlapPolicy.GetHashCode();
      if (catchupWindow_ != null) hash ^= CatchupWindow.GetHashCode();
      if (PauseOnFailure != false) hash ^= PauseOnFailure.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (OverlapPolicy != global::Temporalio.Api.Enums.V1.ScheduleOverlapPolicy.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) OverlapPolicy);
      }
      if (catchupWindow_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CatchupWindow);
      }
      if (PauseOnFailure != false) {
        output.WriteRawTag(24);
        output.WriteBool(PauseOnFailure);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (OverlapPolicy != global::Temporalio.Api.Enums.V1.ScheduleOverlapPolicy.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) OverlapPolicy);
      }
      if (catchupWindow_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CatchupWindow);
      }
      if (PauseOnFailure != false) {
        output.WriteRawTag(24);
        output.WriteBool(PauseOnFailure);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (OverlapPolicy != global::Temporalio.Api.Enums.V1.ScheduleOverlapPolicy.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OverlapPolicy);
      }
      if (catchupWindow_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CatchupWindow);
      }
      if (PauseOnFailure != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SchedulePolicies other) {
      if (other == null) {
        return;
      }
      if (other.OverlapPolicy != global::Temporalio.Api.Enums.V1.ScheduleOverlapPolicy.Unspecified) {
        OverlapPolicy = other.OverlapPolicy;
      }
      if (other.catchupWindow_ != null) {
        if (catchupWindow_ == null) {
          CatchupWindow = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        CatchupWindow.MergeFrom(other.CatchupWindow);
      }
      if (other.PauseOnFailure != false) {
        PauseOnFailure = other.PauseOnFailure;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OverlapPolicy = (global::Temporalio.Api.Enums.V1.ScheduleOverlapPolicy) input.ReadEnum();
            break;
          }
          case 18: {
            if (catchupWindow_ == null) {
              CatchupWindow = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(CatchupWindow);
            break;
          }
          case 24: {
            PauseOnFailure = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            OverlapPolicy = (global::Temporalio.Api.Enums.V1.ScheduleOverlapPolicy) input.ReadEnum();
            break;
          }
          case 18: {
            if (catchupWindow_ == null) {
              CatchupWindow = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(CatchupWindow);
            break;
          }
          case 24: {
            PauseOnFailure = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ScheduleAction : pb::IMessage<ScheduleAction>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScheduleAction> _parser = new pb::MessageParser<ScheduleAction>(() => new ScheduleAction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScheduleAction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Temporalio.Api.Schedule.V1.MessageReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleAction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleAction(ScheduleAction other) : this() {
      switch (other.ActionCase) {
        case ActionOneofCase.StartWorkflow:
          StartWorkflow = other.StartWorkflow.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleAction Clone() {
      return new ScheduleAction(this);
    }

    /// <summary>Field number for the "start_workflow" field.</summary>
    public const int StartWorkflowFieldNumber = 1;
    /// <summary>
    /// All fields of NewWorkflowExecutionInfo are valid except for:
    /// - workflow_id_reuse_policy
    /// - cron_schedule
    /// The workflow id of the started workflow may not match this exactly,
    /// it may have a timestamp appended for uniqueness.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Temporalio.Api.Workflow.V1.NewWorkflowExecutionInfo StartWorkflow {
      get { return actionCase_ == ActionOneofCase.StartWorkflow ? (global::Temporalio.Api.Workflow.V1.NewWorkflowExecutionInfo) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.StartWorkflow;
      }
    }

    private object action_;
    /// <summary>Enum of possible cases for the "action" oneof.</summary>
    public enum ActionOneofCase {
      None = 0,
      StartWorkflow = 1,
    }
    private ActionOneofCase actionCase_ = ActionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionOneofCase ActionCase {
      get { return actionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAction() {
      actionCase_ = ActionOneofCase.None;
      action_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScheduleAction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScheduleAction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StartWorkflow, other.StartWorkflow)) return false;
      if (ActionCase != other.ActionCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (actionCase_ == ActionOneofCase.StartWorkflow) hash ^= StartWorkflow.GetHashCode();
      hash ^= (int) actionCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (actionCase_ == ActionOneofCase.StartWorkflow) {
        output.WriteRawTag(10);
        output.WriteMessage(StartWorkflow);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (actionCase_ == ActionOneofCase.StartWorkflow) {
        output.WriteRawTag(10);
        output.WriteMessage(StartWorkflow);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (actionCase_ == ActionOneofCase.StartWorkflow) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartWorkflow);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScheduleAction other) {
      if (other == null) {
        return;
      }
      switch (other.ActionCase) {
        case ActionOneofCase.StartWorkflow:
          if (StartWorkflow == null) {
            StartWorkflow = new global::Temporalio.Api.Workflow.V1.NewWorkflowExecutionInfo();
          }
          StartWorkflow.MergeFrom(other.StartWorkflow);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Temporalio.Api.Workflow.V1.NewWorkflowExecutionInfo subBuilder = new global::Temporalio.Api.Workflow.V1.NewWorkflowExecutionInfo();
            if (actionCase_ == ActionOneofCase.StartWorkflow) {
              subBuilder.MergeFrom(StartWorkflow);
            }
            input.ReadMessage(subBuilder);
            StartWorkflow = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Temporalio.Api.Workflow.V1.NewWorkflowExecutionInfo subBuilder = new global::Temporalio.Api.Workflow.V1.NewWorkflowExecutionInfo();
            if (actionCase_ == ActionOneofCase.StartWorkflow) {
              subBuilder.MergeFrom(StartWorkflow);
            }
            input.ReadMessage(subBuilder);
            StartWorkflow = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ScheduleActionResult : pb::IMessage<ScheduleActionResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScheduleActionResult> _parser = new pb::MessageParser<ScheduleActionResult>(() => new ScheduleActionResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScheduleActionResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Temporalio.Api.Schedule.V1.MessageReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleActionResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleActionResult(ScheduleActionResult other) : this() {
      scheduleTime_ = other.scheduleTime_ != null ? other.scheduleTime_.Clone() : null;
      actualTime_ = other.actualTime_ != null ? other.actualTime_.Clone() : null;
      startWorkflowResult_ = other.startWorkflowResult_ != null ? other.startWorkflowResult_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleActionResult Clone() {
      return new ScheduleActionResult(this);
    }

    /// <summary>Field number for the "schedule_time" field.</summary>
    public const int ScheduleTimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp scheduleTime_;
    /// <summary>
    /// Time that the action was taken (according to the schedule, including jitter).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ScheduleTime {
      get { return scheduleTime_; }
      set {
        scheduleTime_ = value;
      }
    }

    /// <summary>Field number for the "actual_time" field.</summary>
    public const int ActualTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp actualTime_;
    /// <summary>
    /// Time that the action was taken (real time).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ActualTime {
      get { return actualTime_; }
      set {
        actualTime_ = value;
      }
    }

    /// <summary>Field number for the "start_workflow_result" field.</summary>
    public const int StartWorkflowResultFieldNumber = 11;
    private global::Temporalio.Api.Common.V1.WorkflowExecution startWorkflowResult_;
    /// <summary>
    /// If action was start_workflow:
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Temporalio.Api.Common.V1.WorkflowExecution StartWorkflowResult {
      get { return startWorkflowResult_; }
      set {
        startWorkflowResult_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScheduleActionResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScheduleActionResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ScheduleTime, other.ScheduleTime)) return false;
      if (!object.Equals(ActualTime, other.ActualTime)) return false;
      if (!object.Equals(StartWorkflowResult, other.StartWorkflowResult)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (scheduleTime_ != null) hash ^= ScheduleTime.GetHashCode();
      if (actualTime_ != null) hash ^= ActualTime.GetHashCode();
      if (startWorkflowResult_ != null) hash ^= StartWorkflowResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (scheduleTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ScheduleTime);
      }
      if (actualTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ActualTime);
      }
      if (startWorkflowResult_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(StartWorkflowResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (scheduleTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ScheduleTime);
      }
      if (actualTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ActualTime);
      }
      if (startWorkflowResult_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(StartWorkflowResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (scheduleTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScheduleTime);
      }
      if (actualTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActualTime);
      }
      if (startWorkflowResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartWorkflowResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScheduleActionResult other) {
      if (other == null) {
        return;
      }
      if (other.scheduleTime_ != null) {
        if (scheduleTime_ == null) {
          ScheduleTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ScheduleTime.MergeFrom(other.ScheduleTime);
      }
      if (other.actualTime_ != null) {
        if (actualTime_ == null) {
          ActualTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ActualTime.MergeFrom(other.ActualTime);
      }
      if (other.startWorkflowResult_ != null) {
        if (startWorkflowResult_ == null) {
          StartWorkflowResult = new global::Temporalio.Api.Common.V1.WorkflowExecution();
        }
        StartWorkflowResult.MergeFrom(other.StartWorkflowResult);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (scheduleTime_ == null) {
              ScheduleTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ScheduleTime);
            break;
          }
          case 18: {
            if (actualTime_ == null) {
              ActualTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ActualTime);
            break;
          }
          case 90: {
            if (startWorkflowResult_ == null) {
              StartWorkflowResult = new global::Temporalio.Api.Common.V1.WorkflowExecution();
            }
            input.ReadMessage(StartWorkflowResult);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (scheduleTime_ == null) {
              ScheduleTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ScheduleTime);
            break;
          }
          case 18: {
            if (actualTime_ == null) {
              ActualTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ActualTime);
            break;
          }
          case 90: {
            if (startWorkflowResult_ == null) {
              StartWorkflowResult = new global::Temporalio.Api.Common.V1.WorkflowExecution();
            }
            input.ReadMessage(StartWorkflowResult);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ScheduleState : pb::IMessage<ScheduleState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScheduleState> _parser = new pb::MessageParser<ScheduleState>(() => new ScheduleState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScheduleState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Temporalio.Api.Schedule.V1.MessageReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleState(ScheduleState other) : this() {
      notes_ = other.notes_;
      paused_ = other.paused_;
      limitedActions_ = other.limitedActions_;
      remainingActions_ = other.remainingActions_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleState Clone() {
      return new ScheduleState(this);
    }

    /// <summary>Field number for the "notes" field.</summary>
    public const int NotesFieldNumber = 1;
    private string notes_ = "";
    /// <summary>
    /// Informative human-readable message with contextual notes, e.g. the reason
    /// a schedule is paused. The system may overwrite this message on certain
    /// conditions, e.g. when pause-on-failure happens.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Notes {
      get { return notes_; }
      set {
        notes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "paused" field.</summary>
    public const int PausedFieldNumber = 2;
    private bool paused_;
    /// <summary>
    /// If true, do not take any actions based on the schedule spec.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Paused {
      get { return paused_; }
      set {
        paused_ = value;
      }
    }

    /// <summary>Field number for the "limited_actions" field.</summary>
    public const int LimitedActionsFieldNumber = 3;
    private bool limitedActions_;
    /// <summary>
    /// If limited_actions is true, decrement remaining_actions after each
    /// action, and do not take any more scheduled actions if remaining_actions
    /// is zero. Actions may still be taken by explicit request (i.e. trigger
    /// immediately or backfill). Skipped actions (due to overlap policy) do not
    /// count against remaining actions.
    /// If a schedule has no more remaining actions, then the schedule will be
    /// subject to automatic deletion (after several days).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LimitedActions {
      get { return limitedActions_; }
      set {
        limitedActions_ = value;
      }
    }

    /// <summary>Field number for the "remaining_actions" field.</summary>
    public const int RemainingActionsFieldNumber = 4;
    private long remainingActions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RemainingActions {
      get { return remainingActions_; }
      set {
        remainingActions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScheduleState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScheduleState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Notes != other.Notes) return false;
      if (Paused != other.Paused) return false;
      if (LimitedActions != other.LimitedActions) return false;
      if (RemainingActions != other.RemainingActions) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Notes.Length != 0) hash ^= Notes.GetHashCode();
      if (Paused != false) hash ^= Paused.GetHashCode();
      if (LimitedActions != false) hash ^= LimitedActions.GetHashCode();
      if (RemainingActions != 0L) hash ^= RemainingActions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Notes.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Notes);
      }
      if (Paused != false) {
        output.WriteRawTag(16);
        output.WriteBool(Paused);
      }
      if (LimitedActions != false) {
        output.WriteRawTag(24);
        output.WriteBool(LimitedActions);
      }
      if (RemainingActions != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(RemainingActions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Notes.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Notes);
      }
      if (Paused != false) {
        output.WriteRawTag(16);
        output.WriteBool(Paused);
      }
      if (LimitedActions != false) {
        output.WriteRawTag(24);
        output.WriteBool(LimitedActions);
      }
      if (RemainingActions != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(RemainingActions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Notes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Notes);
      }
      if (Paused != false) {
        size += 1 + 1;
      }
      if (LimitedActions != false) {
        size += 1 + 1;
      }
      if (RemainingActions != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RemainingActions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScheduleState other) {
      if (other == null) {
        return;
      }
      if (other.Notes.Length != 0) {
        Notes = other.Notes;
      }
      if (other.Paused != false) {
        Paused = other.Paused;
      }
      if (other.LimitedActions != false) {
        LimitedActions = other.LimitedActions;
      }
      if (other.RemainingActions != 0L) {
        RemainingActions = other.RemainingActions;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Notes = input.ReadString();
            break;
          }
          case 16: {
            Paused = input.ReadBool();
            break;
          }
          case 24: {
            LimitedActions = input.ReadBool();
            break;
          }
          case 32: {
            RemainingActions = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Notes = input.ReadString();
            break;
          }
          case 16: {
            Paused = input.ReadBool();
            break;
          }
          case 24: {
            LimitedActions = input.ReadBool();
            break;
          }
          case 32: {
            RemainingActions = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TriggerImmediatelyRequest : pb::IMessage<TriggerImmediatelyRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TriggerImmediatelyRequest> _parser = new pb::MessageParser<TriggerImmediatelyRequest>(() => new TriggerImmediatelyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TriggerImmediatelyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Temporalio.Api.Schedule.V1.MessageReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TriggerImmediatelyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TriggerImmediatelyRequest(TriggerImmediatelyRequest other) : this() {
      overlapPolicy_ = other.overlapPolicy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TriggerImmediatelyRequest Clone() {
      return new TriggerImmediatelyRequest(this);
    }

    /// <summary>Field number for the "overlap_policy" field.</summary>
    public const int OverlapPolicyFieldNumber = 1;
    private global::Temporalio.Api.Enums.V1.ScheduleOverlapPolicy overlapPolicy_ = global::Temporalio.Api.Enums.V1.ScheduleOverlapPolicy.Unspecified;
    /// <summary>
    /// If set, override overlap policy for this one request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Temporalio.Api.Enums.V1.ScheduleOverlapPolicy OverlapPolicy {
      get { return overlapPolicy_; }
      set {
        overlapPolicy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TriggerImmediatelyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TriggerImmediatelyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OverlapPolicy != other.OverlapPolicy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (OverlapPolicy != global::Temporalio.Api.Enums.V1.ScheduleOverlapPolicy.Unspecified) hash ^= OverlapPolicy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (OverlapPolicy != global::Temporalio.Api.Enums.V1.ScheduleOverlapPolicy.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) OverlapPolicy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (OverlapPolicy != global::Temporalio.Api.Enums.V1.ScheduleOverlapPolicy.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) OverlapPolicy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (OverlapPolicy != global::Temporalio.Api.Enums.V1.ScheduleOverlapPolicy.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OverlapPolicy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TriggerImmediatelyRequest other) {
      if (other == null) {
        return;
      }
      if (other.OverlapPolicy != global::Temporalio.Api.Enums.V1.ScheduleOverlapPolicy.Unspecified) {
        OverlapPolicy = other.OverlapPolicy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OverlapPolicy = (global::Temporalio.Api.Enums.V1.ScheduleOverlapPolicy) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            OverlapPolicy = (global::Temporalio.Api.Enums.V1.ScheduleOverlapPolicy) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BackfillRequest : pb::IMessage<BackfillRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BackfillRequest> _parser = new pb::MessageParser<BackfillRequest>(() => new BackfillRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BackfillRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Temporalio.Api.Schedule.V1.MessageReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BackfillRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BackfillRequest(BackfillRequest other) : this() {
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      overlapPolicy_ = other.overlapPolicy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BackfillRequest Clone() {
      return new BackfillRequest(this);
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// Time range to evaluate schedule in. Currently, this time range is
    /// exclusive on start_time and inclusive on end_time. (This is admittedly
    /// counterintuitive and it may change in the future, so to be safe, use a
    /// start time strictly before a scheduled time.) Also note that an action
    /// nominally scheduled in the interval but with jitter that pushes it after
    /// end_time will not be included.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "overlap_policy" field.</summary>
    public const int OverlapPolicyFieldNumber = 3;
    private global::Temporalio.Api.Enums.V1.ScheduleOverlapPolicy overlapPolicy_ = global::Temporalio.Api.Enums.V1.ScheduleOverlapPolicy.Unspecified;
    /// <summary>
    /// If set, override overlap policy for this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Temporalio.Api.Enums.V1.ScheduleOverlapPolicy OverlapPolicy {
      get { return overlapPolicy_; }
      set {
        overlapPolicy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BackfillRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BackfillRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (OverlapPolicy != other.OverlapPolicy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (OverlapPolicy != global::Temporalio.Api.Enums.V1.ScheduleOverlapPolicy.Unspecified) hash ^= OverlapPolicy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (startTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (OverlapPolicy != global::Temporalio.Api.Enums.V1.ScheduleOverlapPolicy.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) OverlapPolicy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (startTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (OverlapPolicy != global::Temporalio.Api.Enums.V1.ScheduleOverlapPolicy.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) OverlapPolicy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (OverlapPolicy != global::Temporalio.Api.Enums.V1.ScheduleOverlapPolicy.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OverlapPolicy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BackfillRequest other) {
      if (other == null) {
        return;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      if (other.OverlapPolicy != global::Temporalio.Api.Enums.V1.ScheduleOverlapPolicy.Unspecified) {
        OverlapPolicy = other.OverlapPolicy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 24: {
            OverlapPolicy = (global::Temporalio.Api.Enums.V1.ScheduleOverlapPolicy) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 24: {
            OverlapPolicy = (global::Temporalio.Api.Enums.V1.ScheduleOverlapPolicy) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SchedulePatch : pb::IMessage<SchedulePatch>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SchedulePatch> _parser = new pb::MessageParser<SchedulePatch>(() => new SchedulePatch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SchedulePatch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Temporalio.Api.Schedule.V1.MessageReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SchedulePatch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SchedulePatch(SchedulePatch other) : this() {
      triggerImmediately_ = other.triggerImmediately_ != null ? other.triggerImmediately_.Clone() : null;
      backfillRequest_ = other.backfillRequest_.Clone();
      pause_ = other.pause_;
      unpause_ = other.unpause_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SchedulePatch Clone() {
      return new SchedulePatch(this);
    }

    /// <summary>Field number for the "trigger_immediately" field.</summary>
    public const int TriggerImmediatelyFieldNumber = 1;
    private global::Temporalio.Api.Schedule.V1.TriggerImmediatelyRequest triggerImmediately_;
    /// <summary>
    /// If set, trigger one action immediately.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Temporalio.Api.Schedule.V1.TriggerImmediatelyRequest TriggerImmediately {
      get { return triggerImmediately_; }
      set {
        triggerImmediately_ = value;
      }
    }

    /// <summary>Field number for the "backfill_request" field.</summary>
    public const int BackfillRequestFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Temporalio.Api.Schedule.V1.BackfillRequest> _repeated_backfillRequest_codec
        = pb::FieldCodec.ForMessage(18, global::Temporalio.Api.Schedule.V1.BackfillRequest.Parser);
    private readonly pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.BackfillRequest> backfillRequest_ = new pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.BackfillRequest>();
    /// <summary>
    /// If set, runs though the specified time period(s) and takes actions as if that time
    /// passed by right now, all at once. The overlap policy can be overridden for the
    /// scope of the backfill.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.BackfillRequest> BackfillRequest {
      get { return backfillRequest_; }
    }

    /// <summary>Field number for the "pause" field.</summary>
    public const int PauseFieldNumber = 3;
    private string pause_ = "";
    /// <summary>
    /// If set, change the state to paused or unpaused (respectively) and set the
    /// notes field to the value of the string.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Pause {
      get { return pause_; }
      set {
        pause_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unpause" field.</summary>
    public const int UnpauseFieldNumber = 4;
    private string unpause_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Unpause {
      get { return unpause_; }
      set {
        unpause_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SchedulePatch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SchedulePatch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TriggerImmediately, other.TriggerImmediately)) return false;
      if(!backfillRequest_.Equals(other.backfillRequest_)) return false;
      if (Pause != other.Pause) return false;
      if (Unpause != other.Unpause) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (triggerImmediately_ != null) hash ^= TriggerImmediately.GetHashCode();
      hash ^= backfillRequest_.GetHashCode();
      if (Pause.Length != 0) hash ^= Pause.GetHashCode();
      if (Unpause.Length != 0) hash ^= Unpause.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (triggerImmediately_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TriggerImmediately);
      }
      backfillRequest_.WriteTo(output, _repeated_backfillRequest_codec);
      if (Pause.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Pause);
      }
      if (Unpause.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Unpause);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (triggerImmediately_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TriggerImmediately);
      }
      backfillRequest_.WriteTo(ref output, _repeated_backfillRequest_codec);
      if (Pause.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Pause);
      }
      if (Unpause.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Unpause);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (triggerImmediately_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TriggerImmediately);
      }
      size += backfillRequest_.CalculateSize(_repeated_backfillRequest_codec);
      if (Pause.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pause);
      }
      if (Unpause.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Unpause);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SchedulePatch other) {
      if (other == null) {
        return;
      }
      if (other.triggerImmediately_ != null) {
        if (triggerImmediately_ == null) {
          TriggerImmediately = new global::Temporalio.Api.Schedule.V1.TriggerImmediatelyRequest();
        }
        TriggerImmediately.MergeFrom(other.TriggerImmediately);
      }
      backfillRequest_.Add(other.backfillRequest_);
      if (other.Pause.Length != 0) {
        Pause = other.Pause;
      }
      if (other.Unpause.Length != 0) {
        Unpause = other.Unpause;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (triggerImmediately_ == null) {
              TriggerImmediately = new global::Temporalio.Api.Schedule.V1.TriggerImmediatelyRequest();
            }
            input.ReadMessage(TriggerImmediately);
            break;
          }
          case 18: {
            backfillRequest_.AddEntriesFrom(input, _repeated_backfillRequest_codec);
            break;
          }
          case 26: {
            Pause = input.ReadString();
            break;
          }
          case 34: {
            Unpause = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (triggerImmediately_ == null) {
              TriggerImmediately = new global::Temporalio.Api.Schedule.V1.TriggerImmediatelyRequest();
            }
            input.ReadMessage(TriggerImmediately);
            break;
          }
          case 18: {
            backfillRequest_.AddEntriesFrom(ref input, _repeated_backfillRequest_codec);
            break;
          }
          case 26: {
            Pause = input.ReadString();
            break;
          }
          case 34: {
            Unpause = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ScheduleInfo : pb::IMessage<ScheduleInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScheduleInfo> _parser = new pb::MessageParser<ScheduleInfo>(() => new ScheduleInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScheduleInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Temporalio.Api.Schedule.V1.MessageReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleInfo(ScheduleInfo other) : this() {
      actionCount_ = other.actionCount_;
      missedCatchupWindow_ = other.missedCatchupWindow_;
      overlapSkipped_ = other.overlapSkipped_;
      bufferDropped_ = other.bufferDropped_;
      bufferSize_ = other.bufferSize_;
      runningWorkflows_ = other.runningWorkflows_.Clone();
      recentActions_ = other.recentActions_.Clone();
      futureActionTimes_ = other.futureActionTimes_.Clone();
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      invalidScheduleError_ = other.invalidScheduleError_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleInfo Clone() {
      return new ScheduleInfo(this);
    }

    /// <summary>Field number for the "action_count" field.</summary>
    public const int ActionCountFieldNumber = 1;
    private long actionCount_;
    /// <summary>
    /// Number of actions taken so far.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ActionCount {
      get { return actionCount_; }
      set {
        actionCount_ = value;
      }
    }

    /// <summary>Field number for the "missed_catchup_window" field.</summary>
    public const int MissedCatchupWindowFieldNumber = 2;
    private long missedCatchupWindow_;
    /// <summary>
    /// Number of times a scheduled action was skipped due to missing the catchup window.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MissedCatchupWindow {
      get { return missedCatchupWindow_; }
      set {
        missedCatchupWindow_ = value;
      }
    }

    /// <summary>Field number for the "overlap_skipped" field.</summary>
    public const int OverlapSkippedFieldNumber = 3;
    private long overlapSkipped_;
    /// <summary>
    /// Number of skipped actions due to overlap.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long OverlapSkipped {
      get { return overlapSkipped_; }
      set {
        overlapSkipped_ = value;
      }
    }

    /// <summary>Field number for the "buffer_dropped" field.</summary>
    public const int BufferDroppedFieldNumber = 10;
    private long bufferDropped_;
    /// <summary>
    /// Number of dropped actions due to buffer limit.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BufferDropped {
      get { return bufferDropped_; }
      set {
        bufferDropped_ = value;
      }
    }

    /// <summary>Field number for the "buffer_size" field.</summary>
    public const int BufferSizeFieldNumber = 11;
    private long bufferSize_;
    /// <summary>
    /// Number of actions in the buffer. The buffer holds the actions that cannot
    /// be immediately triggered (due to the overlap policy). These actions can be a result of
    /// the normal schedule or a backfill.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BufferSize {
      get { return bufferSize_; }
      set {
        bufferSize_ = value;
      }
    }

    /// <summary>Field number for the "running_workflows" field.</summary>
    public const int RunningWorkflowsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Temporalio.Api.Common.V1.WorkflowExecution> _repeated_runningWorkflows_codec
        = pb::FieldCodec.ForMessage(74, global::Temporalio.Api.Common.V1.WorkflowExecution.Parser);
    private readonly pbc::RepeatedField<global::Temporalio.Api.Common.V1.WorkflowExecution> runningWorkflows_ = new pbc::RepeatedField<global::Temporalio.Api.Common.V1.WorkflowExecution>();
    /// <summary>
    /// Currently-running workflows started by this schedule. (There might be
    /// more than one if the overlap policy allows overlaps.)
    /// Note that the run_ids in here are the original execution run ids as
    /// started by the schedule. If the workflows retried, did continue-as-new,
    /// or were reset, they might still be running but with a different run_id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Temporalio.Api.Common.V1.WorkflowExecution> RunningWorkflows {
      get { return runningWorkflows_; }
    }

    /// <summary>Field number for the "recent_actions" field.</summary>
    public const int RecentActionsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Temporalio.Api.Schedule.V1.ScheduleActionResult> _repeated_recentActions_codec
        = pb::FieldCodec.ForMessage(34, global::Temporalio.Api.Schedule.V1.ScheduleActionResult.Parser);
    private readonly pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.ScheduleActionResult> recentActions_ = new pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.ScheduleActionResult>();
    /// <summary>
    /// Most recent ten actual action times (including manual triggers).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.ScheduleActionResult> RecentActions {
      get { return recentActions_; }
    }

    /// <summary>Field number for the "future_action_times" field.</summary>
    public const int FutureActionTimesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Timestamp> _repeated_futureActionTimes_codec
        = pb::FieldCodec.ForMessage(42, global::Google.Protobuf.WellKnownTypes.Timestamp.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Timestamp> futureActionTimes_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Timestamp>();
    /// <summary>
    /// Next ten scheduled action times.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Timestamp> FutureActionTimes {
      get { return futureActionTimes_; }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Timestamps of schedule creation and last update.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "invalid_schedule_error" field.</summary>
    public const int InvalidScheduleErrorFieldNumber = 8;
    private string invalidScheduleError_ = "";
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InvalidScheduleError {
      get { return invalidScheduleError_; }
      set {
        invalidScheduleError_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScheduleInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScheduleInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActionCount != other.ActionCount) return false;
      if (MissedCatchupWindow != other.MissedCatchupWindow) return false;
      if (OverlapSkipped != other.OverlapSkipped) return false;
      if (BufferDropped != other.BufferDropped) return false;
      if (BufferSize != other.BufferSize) return false;
      if(!runningWorkflows_.Equals(other.runningWorkflows_)) return false;
      if(!recentActions_.Equals(other.recentActions_)) return false;
      if(!futureActionTimes_.Equals(other.futureActionTimes_)) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (InvalidScheduleError != other.InvalidScheduleError) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ActionCount != 0L) hash ^= ActionCount.GetHashCode();
      if (MissedCatchupWindow != 0L) hash ^= MissedCatchupWindow.GetHashCode();
      if (OverlapSkipped != 0L) hash ^= OverlapSkipped.GetHashCode();
      if (BufferDropped != 0L) hash ^= BufferDropped.GetHashCode();
      if (BufferSize != 0L) hash ^= BufferSize.GetHashCode();
      hash ^= runningWorkflows_.GetHashCode();
      hash ^= recentActions_.GetHashCode();
      hash ^= futureActionTimes_.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (InvalidScheduleError.Length != 0) hash ^= InvalidScheduleError.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ActionCount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ActionCount);
      }
      if (MissedCatchupWindow != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MissedCatchupWindow);
      }
      if (OverlapSkipped != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(OverlapSkipped);
      }
      recentActions_.WriteTo(output, _repeated_recentActions_codec);
      futureActionTimes_.WriteTo(output, _repeated_futureActionTimes_codec);
      if (createTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(UpdateTime);
      }
      if (InvalidScheduleError.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(InvalidScheduleError);
      }
      runningWorkflows_.WriteTo(output, _repeated_runningWorkflows_codec);
      if (BufferDropped != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(BufferDropped);
      }
      if (BufferSize != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(BufferSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ActionCount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ActionCount);
      }
      if (MissedCatchupWindow != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MissedCatchupWindow);
      }
      if (OverlapSkipped != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(OverlapSkipped);
      }
      recentActions_.WriteTo(ref output, _repeated_recentActions_codec);
      futureActionTimes_.WriteTo(ref output, _repeated_futureActionTimes_codec);
      if (createTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(UpdateTime);
      }
      if (InvalidScheduleError.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(InvalidScheduleError);
      }
      runningWorkflows_.WriteTo(ref output, _repeated_runningWorkflows_codec);
      if (BufferDropped != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(BufferDropped);
      }
      if (BufferSize != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(BufferSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ActionCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ActionCount);
      }
      if (MissedCatchupWindow != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MissedCatchupWindow);
      }
      if (OverlapSkipped != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OverlapSkipped);
      }
      if (BufferDropped != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BufferDropped);
      }
      if (BufferSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BufferSize);
      }
      size += runningWorkflows_.CalculateSize(_repeated_runningWorkflows_codec);
      size += recentActions_.CalculateSize(_repeated_recentActions_codec);
      size += futureActionTimes_.CalculateSize(_repeated_futureActionTimes_codec);
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (InvalidScheduleError.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InvalidScheduleError);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScheduleInfo other) {
      if (other == null) {
        return;
      }
      if (other.ActionCount != 0L) {
        ActionCount = other.ActionCount;
      }
      if (other.MissedCatchupWindow != 0L) {
        MissedCatchupWindow = other.MissedCatchupWindow;
      }
      if (other.OverlapSkipped != 0L) {
        OverlapSkipped = other.OverlapSkipped;
      }
      if (other.BufferDropped != 0L) {
        BufferDropped = other.BufferDropped;
      }
      if (other.BufferSize != 0L) {
        BufferSize = other.BufferSize;
      }
      runningWorkflows_.Add(other.runningWorkflows_);
      recentActions_.Add(other.recentActions_);
      futureActionTimes_.Add(other.futureActionTimes_);
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      if (other.InvalidScheduleError.Length != 0) {
        InvalidScheduleError = other.InvalidScheduleError;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ActionCount = input.ReadInt64();
            break;
          }
          case 16: {
            MissedCatchupWindow = input.ReadInt64();
            break;
          }
          case 24: {
            OverlapSkipped = input.ReadInt64();
            break;
          }
          case 34: {
            recentActions_.AddEntriesFrom(input, _repeated_recentActions_codec);
            break;
          }
          case 42: {
            futureActionTimes_.AddEntriesFrom(input, _repeated_futureActionTimes_codec);
            break;
          }
          case 50: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 58: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 66: {
            InvalidScheduleError = input.ReadString();
            break;
          }
          case 74: {
            runningWorkflows_.AddEntriesFrom(input, _repeated_runningWorkflows_codec);
            break;
          }
          case 80: {
            BufferDropped = input.ReadInt64();
            break;
          }
          case 88: {
            BufferSize = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ActionCount = input.ReadInt64();
            break;
          }
          case 16: {
            MissedCatchupWindow = input.ReadInt64();
            break;
          }
          case 24: {
            OverlapSkipped = input.ReadInt64();
            break;
          }
          case 34: {
            recentActions_.AddEntriesFrom(ref input, _repeated_recentActions_codec);
            break;
          }
          case 42: {
            futureActionTimes_.AddEntriesFrom(ref input, _repeated_futureActionTimes_codec);
            break;
          }
          case 50: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 58: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 66: {
            InvalidScheduleError = input.ReadString();
            break;
          }
          case 74: {
            runningWorkflows_.AddEntriesFrom(ref input, _repeated_runningWorkflows_codec);
            break;
          }
          case 80: {
            BufferDropped = input.ReadInt64();
            break;
          }
          case 88: {
            BufferSize = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Schedule : pb::IMessage<Schedule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Schedule> _parser = new pb::MessageParser<Schedule>(() => new Schedule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Schedule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Temporalio.Api.Schedule.V1.MessageReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Schedule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Schedule(Schedule other) : this() {
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      action_ = other.action_ != null ? other.action_.Clone() : null;
      policies_ = other.policies_ != null ? other.policies_.Clone() : null;
      state_ = other.state_ != null ? other.state_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Schedule Clone() {
      return new Schedule(this);
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 1;
    private global::Temporalio.Api.Schedule.V1.ScheduleSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Temporalio.Api.Schedule.V1.ScheduleSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 2;
    private global::Temporalio.Api.Schedule.V1.ScheduleAction action_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Temporalio.Api.Schedule.V1.ScheduleAction Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    /// <summary>Field number for the "policies" field.</summary>
    public const int PoliciesFieldNumber = 3;
    private global::Temporalio.Api.Schedule.V1.SchedulePolicies policies_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Temporalio.Api.Schedule.V1.SchedulePolicies Policies {
      get { return policies_; }
      set {
        policies_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 4;
    private global::Temporalio.Api.Schedule.V1.ScheduleState state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Temporalio.Api.Schedule.V1.ScheduleState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Schedule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Schedule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Action, other.Action)) return false;
      if (!object.Equals(Policies, other.Policies)) return false;
      if (!object.Equals(State, other.State)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (action_ != null) hash ^= Action.GetHashCode();
      if (policies_ != null) hash ^= Policies.GetHashCode();
      if (state_ != null) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (spec_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Spec);
      }
      if (action_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Action);
      }
      if (policies_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Policies);
      }
      if (state_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (spec_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Spec);
      }
      if (action_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Action);
      }
      if (policies_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Policies);
      }
      if (state_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (action_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Action);
      }
      if (policies_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Policies);
      }
      if (state_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Schedule other) {
      if (other == null) {
        return;
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Temporalio.Api.Schedule.V1.ScheduleSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.action_ != null) {
        if (action_ == null) {
          Action = new global::Temporalio.Api.Schedule.V1.ScheduleAction();
        }
        Action.MergeFrom(other.Action);
      }
      if (other.policies_ != null) {
        if (policies_ == null) {
          Policies = new global::Temporalio.Api.Schedule.V1.SchedulePolicies();
        }
        Policies.MergeFrom(other.Policies);
      }
      if (other.state_ != null) {
        if (state_ == null) {
          State = new global::Temporalio.Api.Schedule.V1.ScheduleState();
        }
        State.MergeFrom(other.State);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (spec_ == null) {
              Spec = new global::Temporalio.Api.Schedule.V1.ScheduleSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 18: {
            if (action_ == null) {
              Action = new global::Temporalio.Api.Schedule.V1.ScheduleAction();
            }
            input.ReadMessage(Action);
            break;
          }
          case 26: {
            if (policies_ == null) {
              Policies = new global::Temporalio.Api.Schedule.V1.SchedulePolicies();
            }
            input.ReadMessage(Policies);
            break;
          }
          case 34: {
            if (state_ == null) {
              State = new global::Temporalio.Api.Schedule.V1.ScheduleState();
            }
            input.ReadMessage(State);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (spec_ == null) {
              Spec = new global::Temporalio.Api.Schedule.V1.ScheduleSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 18: {
            if (action_ == null) {
              Action = new global::Temporalio.Api.Schedule.V1.ScheduleAction();
            }
            input.ReadMessage(Action);
            break;
          }
          case 26: {
            if (policies_ == null) {
              Policies = new global::Temporalio.Api.Schedule.V1.SchedulePolicies();
            }
            input.ReadMessage(Policies);
            break;
          }
          case 34: {
            if (state_ == null) {
              State = new global::Temporalio.Api.Schedule.V1.ScheduleState();
            }
            input.ReadMessage(State);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// ScheduleListInfo is an abbreviated set of values from Schedule and ScheduleInfo
  /// that's returned in ListSchedules.
  /// </summary>
  public sealed partial class ScheduleListInfo : pb::IMessage<ScheduleListInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScheduleListInfo> _parser = new pb::MessageParser<ScheduleListInfo>(() => new ScheduleListInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScheduleListInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Temporalio.Api.Schedule.V1.MessageReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleListInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleListInfo(ScheduleListInfo other) : this() {
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      workflowType_ = other.workflowType_ != null ? other.workflowType_.Clone() : null;
      notes_ = other.notes_;
      paused_ = other.paused_;
      recentActions_ = other.recentActions_.Clone();
      futureActionTimes_ = other.futureActionTimes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleListInfo Clone() {
      return new ScheduleListInfo(this);
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 1;
    private global::Temporalio.Api.Schedule.V1.ScheduleSpec spec_;
    /// <summary>
    /// From spec:
    /// Some fields are dropped from this copy of spec: timezone_data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Temporalio.Api.Schedule.V1.ScheduleSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "workflow_type" field.</summary>
    public const int WorkflowTypeFieldNumber = 2;
    private global::Temporalio.Api.Common.V1.WorkflowType workflowType_;
    /// <summary>
    /// From action:
    /// Action is a oneof field, but we need to encode this in JSON and oneof fields don't work
    /// well with JSON. If action is start_workflow, this is set:
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Temporalio.Api.Common.V1.WorkflowType WorkflowType {
      get { return workflowType_; }
      set {
        workflowType_ = value;
      }
    }

    /// <summary>Field number for the "notes" field.</summary>
    public const int NotesFieldNumber = 3;
    private string notes_ = "";
    /// <summary>
    /// From state:
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Notes {
      get { return notes_; }
      set {
        notes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "paused" field.</summary>
    public const int PausedFieldNumber = 4;
    private bool paused_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Paused {
      get { return paused_; }
      set {
        paused_ = value;
      }
    }

    /// <summary>Field number for the "recent_actions" field.</summary>
    public const int RecentActionsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Temporalio.Api.Schedule.V1.ScheduleActionResult> _repeated_recentActions_codec
        = pb::FieldCodec.ForMessage(42, global::Temporalio.Api.Schedule.V1.ScheduleActionResult.Parser);
    private readonly pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.ScheduleActionResult> recentActions_ = new pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.ScheduleActionResult>();
    /// <summary>
    /// From info (maybe fewer entries):
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Temporalio.Api.Schedule.V1.ScheduleActionResult> RecentActions {
      get { return recentActions_; }
    }

    /// <summary>Field number for the "future_action_times" field.</summary>
    public const int FutureActionTimesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Timestamp> _repeated_futureActionTimes_codec
        = pb::FieldCodec.ForMessage(50, global::Google.Protobuf.WellKnownTypes.Timestamp.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Timestamp> futureActionTimes_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Timestamp>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Timestamp> FutureActionTimes {
      get { return futureActionTimes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScheduleListInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScheduleListInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(WorkflowType, other.WorkflowType)) return false;
      if (Notes != other.Notes) return false;
      if (Paused != other.Paused) return false;
      if(!recentActions_.Equals(other.recentActions_)) return false;
      if(!futureActionTimes_.Equals(other.futureActionTimes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (workflowType_ != null) hash ^= WorkflowType.GetHashCode();
      if (Notes.Length != 0) hash ^= Notes.GetHashCode();
      if (Paused != false) hash ^= Paused.GetHashCode();
      hash ^= recentActions_.GetHashCode();
      hash ^= futureActionTimes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (spec_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Spec);
      }
      if (workflowType_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(WorkflowType);
      }
      if (Notes.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Notes);
      }
      if (Paused != false) {
        output.WriteRawTag(32);
        output.WriteBool(Paused);
      }
      recentActions_.WriteTo(output, _repeated_recentActions_codec);
      futureActionTimes_.WriteTo(output, _repeated_futureActionTimes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (spec_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Spec);
      }
      if (workflowType_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(WorkflowType);
      }
      if (Notes.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Notes);
      }
      if (Paused != false) {
        output.WriteRawTag(32);
        output.WriteBool(Paused);
      }
      recentActions_.WriteTo(ref output, _repeated_recentActions_codec);
      futureActionTimes_.WriteTo(ref output, _repeated_futureActionTimes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (workflowType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WorkflowType);
      }
      if (Notes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Notes);
      }
      if (Paused != false) {
        size += 1 + 1;
      }
      size += recentActions_.CalculateSize(_repeated_recentActions_codec);
      size += futureActionTimes_.CalculateSize(_repeated_futureActionTimes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScheduleListInfo other) {
      if (other == null) {
        return;
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Temporalio.Api.Schedule.V1.ScheduleSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.workflowType_ != null) {
        if (workflowType_ == null) {
          WorkflowType = new global::Temporalio.Api.Common.V1.WorkflowType();
        }
        WorkflowType.MergeFrom(other.WorkflowType);
      }
      if (other.Notes.Length != 0) {
        Notes = other.Notes;
      }
      if (other.Paused != false) {
        Paused = other.Paused;
      }
      recentActions_.Add(other.recentActions_);
      futureActionTimes_.Add(other.futureActionTimes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (spec_ == null) {
              Spec = new global::Temporalio.Api.Schedule.V1.ScheduleSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 18: {
            if (workflowType_ == null) {
              WorkflowType = new global::Temporalio.Api.Common.V1.WorkflowType();
            }
            input.ReadMessage(WorkflowType);
            break;
          }
          case 26: {
            Notes = input.ReadString();
            break;
          }
          case 32: {
            Paused = input.ReadBool();
            break;
          }
          case 42: {
            recentActions_.AddEntriesFrom(input, _repeated_recentActions_codec);
            break;
          }
          case 50: {
            futureActionTimes_.AddEntriesFrom(input, _repeated_futureActionTimes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (spec_ == null) {
              Spec = new global::Temporalio.Api.Schedule.V1.ScheduleSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 18: {
            if (workflowType_ == null) {
              WorkflowType = new global::Temporalio.Api.Common.V1.WorkflowType();
            }
            input.ReadMessage(WorkflowType);
            break;
          }
          case 26: {
            Notes = input.ReadString();
            break;
          }
          case 32: {
            Paused = input.ReadBool();
            break;
          }
          case 42: {
            recentActions_.AddEntriesFrom(ref input, _repeated_recentActions_codec);
            break;
          }
          case 50: {
            futureActionTimes_.AddEntriesFrom(ref input, _repeated_futureActionTimes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// ScheduleListEntry is returned by ListSchedules.
  /// </summary>
  public sealed partial class ScheduleListEntry : pb::IMessage<ScheduleListEntry>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScheduleListEntry> _parser = new pb::MessageParser<ScheduleListEntry>(() => new ScheduleListEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScheduleListEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Temporalio.Api.Schedule.V1.MessageReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleListEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleListEntry(ScheduleListEntry other) : this() {
      scheduleId_ = other.scheduleId_;
      memo_ = other.memo_ != null ? other.memo_.Clone() : null;
      searchAttributes_ = other.searchAttributes_ != null ? other.searchAttributes_.Clone() : null;
      info_ = other.info_ != null ? other.info_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleListEntry Clone() {
      return new ScheduleListEntry(this);
    }

    /// <summary>Field number for the "schedule_id" field.</summary>
    public const int ScheduleIdFieldNumber = 1;
    private string scheduleId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ScheduleId {
      get { return scheduleId_; }
      set {
        scheduleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "memo" field.</summary>
    public const int MemoFieldNumber = 2;
    private global::Temporalio.Api.Common.V1.Memo memo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Temporalio.Api.Common.V1.Memo Memo {
      get { return memo_; }
      set {
        memo_ = value;
      }
    }

    /// <summary>Field number for the "search_attributes" field.</summary>
    public const int SearchAttributesFieldNumber = 3;
    private global::Temporalio.Api.Common.V1.SearchAttributes searchAttributes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Temporalio.Api.Common.V1.SearchAttributes SearchAttributes {
      get { return searchAttributes_; }
      set {
        searchAttributes_ = value;
      }
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 4;
    private global::Temporalio.Api.Schedule.V1.ScheduleListInfo info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Temporalio.Api.Schedule.V1.ScheduleListInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScheduleListEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScheduleListEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ScheduleId != other.ScheduleId) return false;
      if (!object.Equals(Memo, other.Memo)) return false;
      if (!object.Equals(SearchAttributes, other.SearchAttributes)) return false;
      if (!object.Equals(Info, other.Info)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ScheduleId.Length != 0) hash ^= ScheduleId.GetHashCode();
      if (memo_ != null) hash ^= Memo.GetHashCode();
      if (searchAttributes_ != null) hash ^= SearchAttributes.GetHashCode();
      if (info_ != null) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ScheduleId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ScheduleId);
      }
      if (memo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Memo);
      }
      if (searchAttributes_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SearchAttributes);
      }
      if (info_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ScheduleId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ScheduleId);
      }
      if (memo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Memo);
      }
      if (searchAttributes_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SearchAttributes);
      }
      if (info_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ScheduleId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ScheduleId);
      }
      if (memo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Memo);
      }
      if (searchAttributes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SearchAttributes);
      }
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScheduleListEntry other) {
      if (other == null) {
        return;
      }
      if (other.ScheduleId.Length != 0) {
        ScheduleId = other.ScheduleId;
      }
      if (other.memo_ != null) {
        if (memo_ == null) {
          Memo = new global::Temporalio.Api.Common.V1.Memo();
        }
        Memo.MergeFrom(other.Memo);
      }
      if (other.searchAttributes_ != null) {
        if (searchAttributes_ == null) {
          SearchAttributes = new global::Temporalio.Api.Common.V1.SearchAttributes();
        }
        SearchAttributes.MergeFrom(other.SearchAttributes);
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::Temporalio.Api.Schedule.V1.ScheduleListInfo();
        }
        Info.MergeFrom(other.Info);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ScheduleId = input.ReadString();
            break;
          }
          case 18: {
            if (memo_ == null) {
              Memo = new global::Temporalio.Api.Common.V1.Memo();
            }
            input.ReadMessage(Memo);
            break;
          }
          case 26: {
            if (searchAttributes_ == null) {
              SearchAttributes = new global::Temporalio.Api.Common.V1.SearchAttributes();
            }
            input.ReadMessage(SearchAttributes);
            break;
          }
          case 34: {
            if (info_ == null) {
              Info = new global::Temporalio.Api.Schedule.V1.ScheduleListInfo();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ScheduleId = input.ReadString();
            break;
          }
          case 18: {
            if (memo_ == null) {
              Memo = new global::Temporalio.Api.Common.V1.Memo();
            }
            input.ReadMessage(Memo);
            break;
          }
          case 26: {
            if (searchAttributes_ == null) {
              SearchAttributes = new global::Temporalio.Api.Common.V1.SearchAttributes();
            }
            input.ReadMessage(SearchAttributes);
            break;
          }
          case 34: {
            if (info_ == null) {
              Info = new global::Temporalio.Api.Schedule.V1.ScheduleListInfo();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
