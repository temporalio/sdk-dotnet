// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: temporal/api/sdk/v1/enhanced_stack_trace.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Temporalio.Api.Sdk.V1 {

  /// <summary>Holder for reflection information generated from temporal/api/sdk/v1/enhanced_stack_trace.proto</summary>
  public static partial class EnhancedStackTraceReflection {

    #region Descriptor
    /// <summary>File descriptor for temporal/api/sdk/v1/enhanced_stack_trace.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EnhancedStackTraceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci50ZW1wb3JhbC9hcGkvc2RrL3YxL2VuaGFuY2VkX3N0YWNrX3RyYWNlLnBy",
            "b3RvEhN0ZW1wb3JhbC5hcGkuc2RrLnYxIpsCChJFbmhhbmNlZFN0YWNrVHJh",
            "Y2USMwoDc2RrGAEgASgLMiYudGVtcG9yYWwuYXBpLnNkay52MS5TdGFja1Ry",
            "YWNlU0RLSW5mbxJFCgdzb3VyY2VzGAIgAygLMjQudGVtcG9yYWwuYXBpLnNk",
            "ay52MS5FbmhhbmNlZFN0YWNrVHJhY2UuU291cmNlc0VudHJ5Ei8KBnN0YWNr",
            "cxgDIAMoCzIfLnRlbXBvcmFsLmFwaS5zZGsudjEuU3RhY2tUcmFjZRpYCgxT",
            "b3VyY2VzRW50cnkSCwoDa2V5GAEgASgJEjcKBXZhbHVlGAIgASgLMigudGVt",
            "cG9yYWwuYXBpLnNkay52MS5TdGFja1RyYWNlRmlsZVNsaWNlOgI4ASIyChFT",
            "dGFja1RyYWNlU0RLSW5mbxIMCgRuYW1lGAEgASgJEg8KB3ZlcnNpb24YAiAB",
            "KAkiOwoTU3RhY2tUcmFjZUZpbGVTbGljZRITCgtsaW5lX29mZnNldBgBIAEo",
            "DRIPCgdjb250ZW50GAIgASgJIncKFlN0YWNrVHJhY2VGaWxlTG9jYXRpb24S",
            "EQoJZmlsZV9wYXRoGAEgASgJEgwKBGxpbmUYAiABKAUSDgoGY29sdW1uGAMg",
            "ASgFEhUKDWZ1bmN0aW9uX25hbWUYBCABKAkSFQoNaW50ZXJuYWxfY29kZRgF",
            "IAEoCCJMCgpTdGFja1RyYWNlEj4KCWxvY2F0aW9ucxgBIAMoCzIrLnRlbXBv",
            "cmFsLmFwaS5zZGsudjEuU3RhY2tUcmFjZUZpbGVMb2NhdGlvbkKFAQoWaW8u",
            "dGVtcG9yYWwuYXBpLnNkay52MUIXRW5oYW5jZWRTdGFja1RyYWNlUHJvdG9Q",
            "AVodZ28udGVtcG9yYWwuaW8vYXBpL3Nkay92MTtzZGuqAhVUZW1wb3JhbGlv",
            "LkFwaS5TZGsuVjHqAhhUZW1wb3JhbGlvOjpBcGk6OlNkazo6VjFiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Temporalio.Api.Sdk.V1.EnhancedStackTrace), global::Temporalio.Api.Sdk.V1.EnhancedStackTrace.Parser, new[]{ "Sdk", "Sources", "Stacks" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Temporalio.Api.Sdk.V1.StackTraceSDKInfo), global::Temporalio.Api.Sdk.V1.StackTraceSDKInfo.Parser, new[]{ "Name", "Version" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Temporalio.Api.Sdk.V1.StackTraceFileSlice), global::Temporalio.Api.Sdk.V1.StackTraceFileSlice.Parser, new[]{ "LineOffset", "Content" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Temporalio.Api.Sdk.V1.StackTraceFileLocation), global::Temporalio.Api.Sdk.V1.StackTraceFileLocation.Parser, new[]{ "FilePath", "Line", "Column", "FunctionName", "InternalCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Temporalio.Api.Sdk.V1.StackTrace), global::Temporalio.Api.Sdk.V1.StackTrace.Parser, new[]{ "Locations" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Internal structure used to create worker stack traces with references to code.
  /// </summary>
  public sealed partial class EnhancedStackTrace : pb::IMessage<EnhancedStackTrace>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EnhancedStackTrace> _parser = new pb::MessageParser<EnhancedStackTrace>(() => new EnhancedStackTrace());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EnhancedStackTrace> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Temporalio.Api.Sdk.V1.EnhancedStackTraceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EnhancedStackTrace() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EnhancedStackTrace(EnhancedStackTrace other) : this() {
      sdk_ = other.sdk_ != null ? other.sdk_.Clone() : null;
      sources_ = other.sources_.Clone();
      stacks_ = other.stacks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EnhancedStackTrace Clone() {
      return new EnhancedStackTrace(this);
    }

    /// <summary>Field number for the "sdk" field.</summary>
    public const int SdkFieldNumber = 1;
    private global::Temporalio.Api.Sdk.V1.StackTraceSDKInfo sdk_;
    /// <summary>
    /// Information pertaining to the SDK that the trace has been captured from.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Temporalio.Api.Sdk.V1.StackTraceSDKInfo Sdk {
      get { return sdk_; }
      set {
        sdk_ = value;
      }
    }

    /// <summary>Field number for the "sources" field.</summary>
    public const int SourcesFieldNumber = 2;
    private static readonly pbc::MapField<string, global::Temporalio.Api.Sdk.V1.StackTraceFileSlice>.Codec _map_sources_codec
        = new pbc::MapField<string, global::Temporalio.Api.Sdk.V1.StackTraceFileSlice>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Temporalio.Api.Sdk.V1.StackTraceFileSlice.Parser), 18);
    private readonly pbc::MapField<string, global::Temporalio.Api.Sdk.V1.StackTraceFileSlice> sources_ = new pbc::MapField<string, global::Temporalio.Api.Sdk.V1.StackTraceFileSlice>();
    /// <summary>
    /// Mapping of file path to file contents.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::Temporalio.Api.Sdk.V1.StackTraceFileSlice> Sources {
      get { return sources_; }
    }

    /// <summary>Field number for the "stacks" field.</summary>
    public const int StacksFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Temporalio.Api.Sdk.V1.StackTrace> _repeated_stacks_codec
        = pb::FieldCodec.ForMessage(26, global::Temporalio.Api.Sdk.V1.StackTrace.Parser);
    private readonly pbc::RepeatedField<global::Temporalio.Api.Sdk.V1.StackTrace> stacks_ = new pbc::RepeatedField<global::Temporalio.Api.Sdk.V1.StackTrace>();
    /// <summary>
    /// Collection of stacks captured.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Temporalio.Api.Sdk.V1.StackTrace> Stacks {
      get { return stacks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EnhancedStackTrace);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EnhancedStackTrace other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Sdk, other.Sdk)) return false;
      if (!Sources.Equals(other.Sources)) return false;
      if(!stacks_.Equals(other.stacks_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (sdk_ != null) hash ^= Sdk.GetHashCode();
      hash ^= Sources.GetHashCode();
      hash ^= stacks_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (sdk_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Sdk);
      }
      sources_.WriteTo(output, _map_sources_codec);
      stacks_.WriteTo(output, _repeated_stacks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (sdk_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Sdk);
      }
      sources_.WriteTo(ref output, _map_sources_codec);
      stacks_.WriteTo(ref output, _repeated_stacks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (sdk_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sdk);
      }
      size += sources_.CalculateSize(_map_sources_codec);
      size += stacks_.CalculateSize(_repeated_stacks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EnhancedStackTrace other) {
      if (other == null) {
        return;
      }
      if (other.sdk_ != null) {
        if (sdk_ == null) {
          Sdk = new global::Temporalio.Api.Sdk.V1.StackTraceSDKInfo();
        }
        Sdk.MergeFrom(other.Sdk);
      }
      sources_.MergeFrom(other.sources_);
      stacks_.Add(other.stacks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (sdk_ == null) {
              Sdk = new global::Temporalio.Api.Sdk.V1.StackTraceSDKInfo();
            }
            input.ReadMessage(Sdk);
            break;
          }
          case 18: {
            sources_.AddEntriesFrom(input, _map_sources_codec);
            break;
          }
          case 26: {
            stacks_.AddEntriesFrom(input, _repeated_stacks_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (sdk_ == null) {
              Sdk = new global::Temporalio.Api.Sdk.V1.StackTraceSDKInfo();
            }
            input.ReadMessage(Sdk);
            break;
          }
          case 18: {
            sources_.AddEntriesFrom(ref input, _map_sources_codec);
            break;
          }
          case 26: {
            stacks_.AddEntriesFrom(ref input, _repeated_stacks_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Information pertaining to the SDK that the trace has been captured from.
  /// (-- api-linter: core::0123::resource-annotation=disabled
  ///     aip.dev/not-precedent: Naming SDK version is optional. --)
  /// </summary>
  public sealed partial class StackTraceSDKInfo : pb::IMessage<StackTraceSDKInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StackTraceSDKInfo> _parser = new pb::MessageParser<StackTraceSDKInfo>(() => new StackTraceSDKInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StackTraceSDKInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Temporalio.Api.Sdk.V1.EnhancedStackTraceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StackTraceSDKInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StackTraceSDKInfo(StackTraceSDKInfo other) : this() {
      name_ = other.name_;
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StackTraceSDKInfo Clone() {
      return new StackTraceSDKInfo(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the SDK
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private string version_ = "";
    /// <summary>
    /// Version string of the SDK
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StackTraceSDKInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StackTraceSDKInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StackTraceSDKInfo other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// "Slice" of a file starting at line_offset -- a line offset and code fragment corresponding to the worker's stack.
  /// </summary>
  public sealed partial class StackTraceFileSlice : pb::IMessage<StackTraceFileSlice>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StackTraceFileSlice> _parser = new pb::MessageParser<StackTraceFileSlice>(() => new StackTraceFileSlice());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StackTraceFileSlice> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Temporalio.Api.Sdk.V1.EnhancedStackTraceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StackTraceFileSlice() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StackTraceFileSlice(StackTraceFileSlice other) : this() {
      lineOffset_ = other.lineOffset_;
      content_ = other.content_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StackTraceFileSlice Clone() {
      return new StackTraceFileSlice(this);
    }

    /// <summary>Field number for the "line_offset" field.</summary>
    public const int LineOffsetFieldNumber = 1;
    private uint lineOffset_;
    /// <summary>
    /// Only used (possibly) to trim the file without breaking syntax highlighting. This is not optional, unlike
    /// the `line` property of a `StackTraceFileLocation`.
    /// (-- api-linter: core::0141::forbidden-types=disabled
    ///     aip.dev/not-precedent: These really shouldn't have negative values. --)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LineOffset {
      get { return lineOffset_; }
      set {
        lineOffset_ = value;
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 2;
    private string content_ = "";
    /// <summary>
    /// Slice of a file with the respective OS-specific line terminator.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StackTraceFileSlice);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StackTraceFileSlice other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LineOffset != other.LineOffset) return false;
      if (Content != other.Content) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (LineOffset != 0) hash ^= LineOffset.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LineOffset != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(LineOffset);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LineOffset != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(LineOffset);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (LineOffset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LineOffset);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StackTraceFileSlice other) {
      if (other == null) {
        return;
      }
      if (other.LineOffset != 0) {
        LineOffset = other.LineOffset;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LineOffset = input.ReadUInt32();
            break;
          }
          case 18: {
            Content = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LineOffset = input.ReadUInt32();
            break;
          }
          case 18: {
            Content = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// More specific location details of a file: its path, precise line and column numbers if applicable, and function name if available.
  /// In essence, a pointer to a location in a file
  /// </summary>
  public sealed partial class StackTraceFileLocation : pb::IMessage<StackTraceFileLocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StackTraceFileLocation> _parser = new pb::MessageParser<StackTraceFileLocation>(() => new StackTraceFileLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StackTraceFileLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Temporalio.Api.Sdk.V1.EnhancedStackTraceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StackTraceFileLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StackTraceFileLocation(StackTraceFileLocation other) : this() {
      filePath_ = other.filePath_;
      line_ = other.line_;
      column_ = other.column_;
      functionName_ = other.functionName_;
      internalCode_ = other.internalCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StackTraceFileLocation Clone() {
      return new StackTraceFileLocation(this);
    }

    /// <summary>Field number for the "file_path" field.</summary>
    public const int FilePathFieldNumber = 1;
    private string filePath_ = "";
    /// <summary>
    /// Path to source file (absolute or relative).
    /// If the paths are relative, ensure that they are all relative to the same root.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FilePath {
      get { return filePath_; }
      set {
        filePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "line" field.</summary>
    public const int LineFieldNumber = 2;
    private int line_;
    /// <summary>
    /// Optional; If possible, SDK should send this -- this is required for displaying the code location.
    /// If not provided, set to -1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Line {
      get { return line_; }
      set {
        line_ = value;
      }
    }

    /// <summary>Field number for the "column" field.</summary>
    public const int ColumnFieldNumber = 3;
    private int column_;
    /// <summary>
    /// Optional; if possible, SDK should send this.
    /// If not provided, set to -1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Column {
      get { return column_; }
      set {
        column_ = value;
      }
    }

    /// <summary>Field number for the "function_name" field.</summary>
    public const int FunctionNameFieldNumber = 4;
    private string functionName_ = "";
    /// <summary>
    /// Function name this line belongs to, if applicable.
    /// Used for falling back to stack trace view.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FunctionName {
      get { return functionName_; }
      set {
        functionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "internal_code" field.</summary>
    public const int InternalCodeFieldNumber = 5;
    private bool internalCode_;
    /// <summary>
    /// Flag to communicate whether a location should be hidden by default in the stack view.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool InternalCode {
      get { return internalCode_; }
      set {
        internalCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StackTraceFileLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StackTraceFileLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FilePath != other.FilePath) return false;
      if (Line != other.Line) return false;
      if (Column != other.Column) return false;
      if (FunctionName != other.FunctionName) return false;
      if (InternalCode != other.InternalCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (FilePath.Length != 0) hash ^= FilePath.GetHashCode();
      if (Line != 0) hash ^= Line.GetHashCode();
      if (Column != 0) hash ^= Column.GetHashCode();
      if (FunctionName.Length != 0) hash ^= FunctionName.GetHashCode();
      if (InternalCode != false) hash ^= InternalCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FilePath.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FilePath);
      }
      if (Line != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Line);
      }
      if (Column != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Column);
      }
      if (FunctionName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FunctionName);
      }
      if (InternalCode != false) {
        output.WriteRawTag(40);
        output.WriteBool(InternalCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FilePath.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FilePath);
      }
      if (Line != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Line);
      }
      if (Column != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Column);
      }
      if (FunctionName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FunctionName);
      }
      if (InternalCode != false) {
        output.WriteRawTag(40);
        output.WriteBool(InternalCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (FilePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FilePath);
      }
      if (Line != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Line);
      }
      if (Column != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Column);
      }
      if (FunctionName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FunctionName);
      }
      if (InternalCode != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StackTraceFileLocation other) {
      if (other == null) {
        return;
      }
      if (other.FilePath.Length != 0) {
        FilePath = other.FilePath;
      }
      if (other.Line != 0) {
        Line = other.Line;
      }
      if (other.Column != 0) {
        Column = other.Column;
      }
      if (other.FunctionName.Length != 0) {
        FunctionName = other.FunctionName;
      }
      if (other.InternalCode != false) {
        InternalCode = other.InternalCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FilePath = input.ReadString();
            break;
          }
          case 16: {
            Line = input.ReadInt32();
            break;
          }
          case 24: {
            Column = input.ReadInt32();
            break;
          }
          case 34: {
            FunctionName = input.ReadString();
            break;
          }
          case 40: {
            InternalCode = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            FilePath = input.ReadString();
            break;
          }
          case 16: {
            Line = input.ReadInt32();
            break;
          }
          case 24: {
            Column = input.ReadInt32();
            break;
          }
          case 34: {
            FunctionName = input.ReadString();
            break;
          }
          case 40: {
            InternalCode = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Collection of FileLocation messages from a single stack.
  /// </summary>
  public sealed partial class StackTrace : pb::IMessage<StackTrace>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StackTrace> _parser = new pb::MessageParser<StackTrace>(() => new StackTrace());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StackTrace> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Temporalio.Api.Sdk.V1.EnhancedStackTraceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StackTrace() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StackTrace(StackTrace other) : this() {
      locations_ = other.locations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StackTrace Clone() {
      return new StackTrace(this);
    }

    /// <summary>Field number for the "locations" field.</summary>
    public const int LocationsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Temporalio.Api.Sdk.V1.StackTraceFileLocation> _repeated_locations_codec
        = pb::FieldCodec.ForMessage(10, global::Temporalio.Api.Sdk.V1.StackTraceFileLocation.Parser);
    private readonly pbc::RepeatedField<global::Temporalio.Api.Sdk.V1.StackTraceFileLocation> locations_ = new pbc::RepeatedField<global::Temporalio.Api.Sdk.V1.StackTraceFileLocation>();
    /// <summary>
    /// Collection of `FileLocation`s, each for a stack frame that comprise a stack trace.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Temporalio.Api.Sdk.V1.StackTraceFileLocation> Locations {
      get { return locations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StackTrace);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StackTrace other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!locations_.Equals(other.locations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= locations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      locations_.WriteTo(output, _repeated_locations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      locations_.WriteTo(ref output, _repeated_locations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += locations_.CalculateSize(_repeated_locations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StackTrace other) {
      if (other == null) {
        return;
      }
      locations_.Add(other.locations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            locations_.AddEntriesFrom(input, _repeated_locations_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            locations_.AddEntriesFrom(ref input, _repeated_locations_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
