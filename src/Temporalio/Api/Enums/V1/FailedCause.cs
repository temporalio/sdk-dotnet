// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: temporal/api/enums/v1/failed_cause.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Temporalio.Api.Enums.V1 {

  /// <summary>Holder for reflection information generated from temporal/api/enums/v1/failed_cause.proto</summary>
  public static partial class FailedCauseReflection {

    #region Descriptor
    /// <summary>File descriptor for temporal/api/enums/v1/failed_cause.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FailedCauseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cih0ZW1wb3JhbC9hcGkvZW51bXMvdjEvZmFpbGVkX2NhdXNlLnByb3RvEhV0",
            "ZW1wb3JhbC5hcGkuZW51bXMudjEq6A4KF1dvcmtmbG93VGFza0ZhaWxlZENh",
            "dXNlEioKJldPUktGTE9XX1RBU0tfRkFJTEVEX0NBVVNFX1VOU1BFQ0lGSUVE",
            "EAASMAosV09SS0ZMT1dfVEFTS19GQUlMRURfQ0FVU0VfVU5IQU5ETEVEX0NP",
            "TU1BTkQQARI/CjtXT1JLRkxPV19UQVNLX0ZBSUxFRF9DQVVTRV9CQURfU0NI",
            "RURVTEVfQUNUSVZJVFlfQVRUUklCVVRFUxACEkUKQVdPUktGTE9XX1RBU0tf",
            "RkFJTEVEX0NBVVNFX0JBRF9SRVFVRVNUX0NBTkNFTF9BQ1RJVklUWV9BVFRS",
            "SUJVVEVTEAMSOQo1V09SS0ZMT1dfVEFTS19GQUlMRURfQ0FVU0VfQkFEX1NU",
            "QVJUX1RJTUVSX0FUVFJJQlVURVMQBBI6CjZXT1JLRkxPV19UQVNLX0ZBSUxF",
            "RF9DQVVTRV9CQURfQ0FOQ0VMX1RJTUVSX0FUVFJJQlVURVMQBRI7CjdXT1JL",
            "RkxPV19UQVNLX0ZBSUxFRF9DQVVTRV9CQURfUkVDT1JEX01BUktFUl9BVFRS",
            "SUJVVEVTEAYSSQpFV09SS0ZMT1dfVEFTS19GQUlMRURfQ0FVU0VfQkFEX0NP",
            "TVBMRVRFX1dPUktGTE9XX0VYRUNVVElPTl9BVFRSSUJVVEVTEAcSRQpBV09S",
            "S0ZMT1dfVEFTS19GQUlMRURfQ0FVU0VfQkFEX0ZBSUxfV09SS0ZMT1dfRVhF",
            "Q1VUSU9OX0FUVFJJQlVURVMQCBJHCkNXT1JLRkxPV19UQVNLX0ZBSUxFRF9D",
            "QVVTRV9CQURfQ0FOQ0VMX1dPUktGTE9XX0VYRUNVVElPTl9BVFRSSUJVVEVT",
            "EAkSWApUV09SS0ZMT1dfVEFTS19GQUlMRURfQ0FVU0VfQkFEX1JFUVVFU1Rf",
            "Q0FOQ0VMX0VYVEVSTkFMX1dPUktGTE9XX0VYRUNVVElPTl9BVFRSSUJVVEVT",
            "EAoSPQo5V09SS0ZMT1dfVEFTS19GQUlMRURfQ0FVU0VfQkFEX0NPTlRJTlVF",
            "X0FTX05FV19BVFRSSUJVVEVTEAsSNwozV09SS0ZMT1dfVEFTS19GQUlMRURf",
            "Q0FVU0VfU1RBUlRfVElNRVJfRFVQTElDQVRFX0lEEAwSNgoyV09SS0ZMT1df",
            "VEFTS19GQUlMRURfQ0FVU0VfUkVTRVRfU1RJQ0tZX1RBU0tfUVVFVUUQDRJA",
            "CjxXT1JLRkxPV19UQVNLX0ZBSUxFRF9DQVVTRV9XT1JLRkxPV19XT1JLRVJf",
            "VU5IQU5ETEVEX0ZBSUxVUkUQDhJHCkNXT1JLRkxPV19UQVNLX0ZBSUxFRF9D",
            "QVVTRV9CQURfU0lHTkFMX1dPUktGTE9XX0VYRUNVVElPTl9BVFRSSUJVVEVT",
            "EA8SQwo/V09SS0ZMT1dfVEFTS19GQUlMRURfQ0FVU0VfQkFEX1NUQVJUX0NI",
            "SUxEX0VYRUNVVElPTl9BVFRSSUJVVEVTEBASMgouV09SS0ZMT1dfVEFTS19G",
            "QUlMRURfQ0FVU0VfRk9SQ0VfQ0xPU0VfQ09NTUFORBAREjUKMVdPUktGTE9X",
            "X1RBU0tfRkFJTEVEX0NBVVNFX0ZBSUxPVkVSX0NMT1NFX0NPTU1BTkQQEhI0",
            "CjBXT1JLRkxPV19UQVNLX0ZBSUxFRF9DQVVTRV9CQURfU0lHTkFMX0lOUFVU",
            "X1NJWkUQExItCilXT1JLRkxPV19UQVNLX0ZBSUxFRF9DQVVTRV9SRVNFVF9X",
            "T1JLRkxPVxAUEikKJVdPUktGTE9XX1RBU0tfRkFJTEVEX0NBVVNFX0JBRF9C",
            "SU5BUlkQFRI9CjlXT1JLRkxPV19UQVNLX0ZBSUxFRF9DQVVTRV9TQ0hFRFVM",
            "RV9BQ1RJVklUWV9EVVBMSUNBVEVfSUQQFhI0CjBXT1JLRkxPV19UQVNLX0ZB",
            "SUxFRF9DQVVTRV9CQURfU0VBUkNIX0FUVFJJQlVURVMQFxI2CjJXT1JLRkxP",
            "V19UQVNLX0ZBSUxFRF9DQVVTRV9OT05fREVURVJNSU5JU1RJQ19FUlJPUhAY",
            "EkgKRFdPUktGTE9XX1RBU0tfRkFJTEVEX0NBVVNFX0JBRF9NT0RJRllfV09S",
            "S0ZMT1dfUFJPUEVSVElFU19BVFRSSUJVVEVTEBkSRQpBV09SS0ZMT1dfVEFT",
            "S19GQUlMRURfQ0FVU0VfUEVORElOR19DSElMRF9XT1JLRkxPV1NfTElNSVRf",
            "RVhDRUVERUQQGhJACjxXT1JLRkxPV19UQVNLX0ZBSUxFRF9DQVVTRV9QRU5E",
            "SU5HX0FDVElWSVRJRVNfTElNSVRfRVhDRUVERUQQGxI9CjlXT1JLRkxPV19U",
            "QVNLX0ZBSUxFRF9DQVVTRV9QRU5ESU5HX1NJR05BTFNfTElNSVRfRVhDRUVE",
            "RUQQHBJECkBXT1JLRkxPV19UQVNLX0ZBSUxFRF9DQVVTRV9QRU5ESU5HX1JF",
            "UVVFU1RfQ0FOQ0VMX0xJTUlUX0VYQ0VFREVEEB0q8wEKJlN0YXJ0Q2hpbGRX",
            "b3JrZmxvd0V4ZWN1dGlvbkZhaWxlZENhdXNlEjsKN1NUQVJUX0NISUxEX1dP",
            "UktGTE9XX0VYRUNVVElPTl9GQUlMRURfQ0FVU0VfVU5TUEVDSUZJRUQQABJH",
            "CkNTVEFSVF9DSElMRF9XT1JLRkxPV19FWEVDVVRJT05fRkFJTEVEX0NBVVNF",
            "X1dPUktGTE9XX0FMUkVBRFlfRVhJU1RTEAESQwo/U1RBUlRfQ0hJTERfV09S",
            "S0ZMT1dfRVhFQ1VUSU9OX0ZBSUxFRF9DQVVTRV9OQU1FU1BBQ0VfTk9UX0ZP",
            "VU5EEAIqkQIKKkNhbmNlbEV4dGVybmFsV29ya2Zsb3dFeGVjdXRpb25GYWls",
            "ZWRDYXVzZRI/CjtDQU5DRUxfRVhURVJOQUxfV09SS0ZMT1dfRVhFQ1VUSU9O",
            "X0ZBSUxFRF9DQVVTRV9VTlNQRUNJRklFRBAAElkKVUNBTkNFTF9FWFRFUk5B",
            "TF9XT1JLRkxPV19FWEVDVVRJT05fRkFJTEVEX0NBVVNFX0VYVEVSTkFMX1dP",
            "UktGTE9XX0VYRUNVVElPTl9OT1RfRk9VTkQQARJHCkNDQU5DRUxfRVhURVJO",
            "QUxfV09SS0ZMT1dfRVhFQ1VUSU9OX0ZBSUxFRF9DQVVTRV9OQU1FU1BBQ0Vf",
            "Tk9UX0ZPVU5EEAIqkQIKKlNpZ25hbEV4dGVybmFsV29ya2Zsb3dFeGVjdXRp",
            "b25GYWlsZWRDYXVzZRI/CjtTSUdOQUxfRVhURVJOQUxfV09SS0ZMT1dfRVhF",
            "Q1VUSU9OX0ZBSUxFRF9DQVVTRV9VTlNQRUNJRklFRBAAElkKVVNJR05BTF9F",
            "WFRFUk5BTF9XT1JLRkxPV19FWEVDVVRJT05fRkFJTEVEX0NBVVNFX0VYVEVS",
            "TkFMX1dPUktGTE9XX0VYRUNVVElPTl9OT1RfRk9VTkQQARJHCkNTSUdOQUxf",
            "RVhURVJOQUxfV09SS0ZMT1dfRVhFQ1VUSU9OX0ZBSUxFRF9DQVVTRV9OQU1F",
            "U1BBQ0VfTk9UX0ZPVU5EEAIq+QEKFlJlc291cmNlRXhoYXVzdGVkQ2F1c2US",
            "KAokUkVTT1VSQ0VfRVhIQVVTVEVEX0NBVVNFX1VOU1BFQ0lGSUVEEAASJgoi",
            "UkVTT1VSQ0VfRVhIQVVTVEVEX0NBVVNFX1JQU19MSU1JVBABEi0KKVJFU09V",
            "UkNFX0VYSEFVU1RFRF9DQVVTRV9DT05DVVJSRU5UX0xJTUlUEAISLgoqUkVT",
            "T1VSQ0VfRVhIQVVTVEVEX0NBVVNFX1NZU1RFTV9PVkVSTE9BREVEEAMSLgoq",
            "UkVTT1VSQ0VfRVhIQVVTVEVEX0NBVVNFX1BFUlNJU1RFTkNFX0xJTUlUEARC",
            "iAEKGGlvLnRlbXBvcmFsLmFwaS5lbnVtcy52MUIQRmFpbGVkQ2F1c2VQcm90",
            "b1ABWiFnby50ZW1wb3JhbC5pby9hcGkvZW51bXMvdjE7ZW51bXOqAhdUZW1w",
            "b3JhbGlvLkFwaS5FbnVtcy5WMeoCGlRlbXBvcmFsaW86OkFwaTo6RW51bXM6",
            "OlYxYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Temporalio.Api.Enums.V1.WorkflowTaskFailedCause), typeof(global::Temporalio.Api.Enums.V1.StartChildWorkflowExecutionFailedCause), typeof(global::Temporalio.Api.Enums.V1.CancelExternalWorkflowExecutionFailedCause), typeof(global::Temporalio.Api.Enums.V1.SignalExternalWorkflowExecutionFailedCause), typeof(global::Temporalio.Api.Enums.V1.ResourceExhaustedCause), }, null, null));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Workflow tasks can fail for various reasons. Note that some of these reasons can only originate
  /// from the server, and some of them can only originate from the SDK/worker.
  /// </summary>
  public enum WorkflowTaskFailedCause {
    [pbr::OriginalName("WORKFLOW_TASK_FAILED_CAUSE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Between starting and completing the workflow task (with a workflow completion command), some
    /// new command (like a signal) was processed into workflow history. The outstanding task will be
    /// failed with this reason, and a worker must pick up a new task.
    /// </summary>
    [pbr::OriginalName("WORKFLOW_TASK_FAILED_CAUSE_UNHANDLED_COMMAND")] UnhandledCommand = 1,
    [pbr::OriginalName("WORKFLOW_TASK_FAILED_CAUSE_BAD_SCHEDULE_ACTIVITY_ATTRIBUTES")] BadScheduleActivityAttributes = 2,
    [pbr::OriginalName("WORKFLOW_TASK_FAILED_CAUSE_BAD_REQUEST_CANCEL_ACTIVITY_ATTRIBUTES")] BadRequestCancelActivityAttributes = 3,
    [pbr::OriginalName("WORKFLOW_TASK_FAILED_CAUSE_BAD_START_TIMER_ATTRIBUTES")] BadStartTimerAttributes = 4,
    [pbr::OriginalName("WORKFLOW_TASK_FAILED_CAUSE_BAD_CANCEL_TIMER_ATTRIBUTES")] BadCancelTimerAttributes = 5,
    [pbr::OriginalName("WORKFLOW_TASK_FAILED_CAUSE_BAD_RECORD_MARKER_ATTRIBUTES")] BadRecordMarkerAttributes = 6,
    [pbr::OriginalName("WORKFLOW_TASK_FAILED_CAUSE_BAD_COMPLETE_WORKFLOW_EXECUTION_ATTRIBUTES")] BadCompleteWorkflowExecutionAttributes = 7,
    [pbr::OriginalName("WORKFLOW_TASK_FAILED_CAUSE_BAD_FAIL_WORKFLOW_EXECUTION_ATTRIBUTES")] BadFailWorkflowExecutionAttributes = 8,
    [pbr::OriginalName("WORKFLOW_TASK_FAILED_CAUSE_BAD_CANCEL_WORKFLOW_EXECUTION_ATTRIBUTES")] BadCancelWorkflowExecutionAttributes = 9,
    [pbr::OriginalName("WORKFLOW_TASK_FAILED_CAUSE_BAD_REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_ATTRIBUTES")] BadRequestCancelExternalWorkflowExecutionAttributes = 10,
    [pbr::OriginalName("WORKFLOW_TASK_FAILED_CAUSE_BAD_CONTINUE_AS_NEW_ATTRIBUTES")] BadContinueAsNewAttributes = 11,
    [pbr::OriginalName("WORKFLOW_TASK_FAILED_CAUSE_START_TIMER_DUPLICATE_ID")] StartTimerDuplicateId = 12,
    /// <summary>
    /// The worker wishes to fail the task and have the next one be generated on a normal, not sticky
    /// queue. Generally workers should prefer to use the explicit `ResetStickyTaskQueue` RPC call.
    /// </summary>
    [pbr::OriginalName("WORKFLOW_TASK_FAILED_CAUSE_RESET_STICKY_TASK_QUEUE")] ResetStickyTaskQueue = 13,
    [pbr::OriginalName("WORKFLOW_TASK_FAILED_CAUSE_WORKFLOW_WORKER_UNHANDLED_FAILURE")] WorkflowWorkerUnhandledFailure = 14,
    [pbr::OriginalName("WORKFLOW_TASK_FAILED_CAUSE_BAD_SIGNAL_WORKFLOW_EXECUTION_ATTRIBUTES")] BadSignalWorkflowExecutionAttributes = 15,
    [pbr::OriginalName("WORKFLOW_TASK_FAILED_CAUSE_BAD_START_CHILD_EXECUTION_ATTRIBUTES")] BadStartChildExecutionAttributes = 16,
    [pbr::OriginalName("WORKFLOW_TASK_FAILED_CAUSE_FORCE_CLOSE_COMMAND")] ForceCloseCommand = 17,
    [pbr::OriginalName("WORKFLOW_TASK_FAILED_CAUSE_FAILOVER_CLOSE_COMMAND")] FailoverCloseCommand = 18,
    [pbr::OriginalName("WORKFLOW_TASK_FAILED_CAUSE_BAD_SIGNAL_INPUT_SIZE")] BadSignalInputSize = 19,
    [pbr::OriginalName("WORKFLOW_TASK_FAILED_CAUSE_RESET_WORKFLOW")] ResetWorkflow = 20,
    [pbr::OriginalName("WORKFLOW_TASK_FAILED_CAUSE_BAD_BINARY")] BadBinary = 21,
    [pbr::OriginalName("WORKFLOW_TASK_FAILED_CAUSE_SCHEDULE_ACTIVITY_DUPLICATE_ID")] ScheduleActivityDuplicateId = 22,
    [pbr::OriginalName("WORKFLOW_TASK_FAILED_CAUSE_BAD_SEARCH_ATTRIBUTES")] BadSearchAttributes = 23,
    /// <summary>
    /// The worker encountered a mismatch while replaying history between what was expected, and
    /// what the workflow code actually did.
    /// </summary>
    [pbr::OriginalName("WORKFLOW_TASK_FAILED_CAUSE_NON_DETERMINISTIC_ERROR")] NonDeterministicError = 24,
    [pbr::OriginalName("WORKFLOW_TASK_FAILED_CAUSE_BAD_MODIFY_WORKFLOW_PROPERTIES_ATTRIBUTES")] BadModifyWorkflowPropertiesAttributes = 25,
    /// <summary>
    /// We send the below error codes to users when their requests would violate a size constraint
    /// of their workflow. We do this to ensure that the state of their workflow does not become too
    /// large because that can cause severe performance degradation. You can modify the thresholds for
    /// each of these errors within your dynamic config.
    ///
    /// Spawning a new child workflow would cause this workflow to exceed its limit of pending child
    /// workflows.
    /// </summary>
    [pbr::OriginalName("WORKFLOW_TASK_FAILED_CAUSE_PENDING_CHILD_WORKFLOWS_LIMIT_EXCEEDED")] PendingChildWorkflowsLimitExceeded = 26,
    /// <summary>
    /// Starting a new activity would cause this workflow to exceed its limit of pending activities
    /// that we track.
    /// </summary>
    [pbr::OriginalName("WORKFLOW_TASK_FAILED_CAUSE_PENDING_ACTIVITIES_LIMIT_EXCEEDED")] PendingActivitiesLimitExceeded = 27,
    /// <summary>
    /// A workflow has a buffer of signals that have not yet reached their destination. We return this
    /// error when sending a new signal would exceed the capacity of this buffer.
    /// </summary>
    [pbr::OriginalName("WORKFLOW_TASK_FAILED_CAUSE_PENDING_SIGNALS_LIMIT_EXCEEDED")] PendingSignalsLimitExceeded = 28,
    /// <summary>
    /// Similarly, we have a buffer of pending requests to cancel other workflows. We return this error
    /// when our capacity for pending cancel requests is already reached.
    /// </summary>
    [pbr::OriginalName("WORKFLOW_TASK_FAILED_CAUSE_PENDING_REQUEST_CANCEL_LIMIT_EXCEEDED")] PendingRequestCancelLimitExceeded = 29,
  }

  public enum StartChildWorkflowExecutionFailedCause {
    [pbr::OriginalName("START_CHILD_WORKFLOW_EXECUTION_FAILED_CAUSE_UNSPECIFIED")] Unspecified = 0,
    [pbr::OriginalName("START_CHILD_WORKFLOW_EXECUTION_FAILED_CAUSE_WORKFLOW_ALREADY_EXISTS")] WorkflowAlreadyExists = 1,
    [pbr::OriginalName("START_CHILD_WORKFLOW_EXECUTION_FAILED_CAUSE_NAMESPACE_NOT_FOUND")] NamespaceNotFound = 2,
  }

  public enum CancelExternalWorkflowExecutionFailedCause {
    [pbr::OriginalName("CANCEL_EXTERNAL_WORKFLOW_EXECUTION_FAILED_CAUSE_UNSPECIFIED")] Unspecified = 0,
    [pbr::OriginalName("CANCEL_EXTERNAL_WORKFLOW_EXECUTION_FAILED_CAUSE_EXTERNAL_WORKFLOW_EXECUTION_NOT_FOUND")] ExternalWorkflowExecutionNotFound = 1,
    [pbr::OriginalName("CANCEL_EXTERNAL_WORKFLOW_EXECUTION_FAILED_CAUSE_NAMESPACE_NOT_FOUND")] NamespaceNotFound = 2,
  }

  public enum SignalExternalWorkflowExecutionFailedCause {
    [pbr::OriginalName("SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_FAILED_CAUSE_UNSPECIFIED")] Unspecified = 0,
    [pbr::OriginalName("SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_FAILED_CAUSE_EXTERNAL_WORKFLOW_EXECUTION_NOT_FOUND")] ExternalWorkflowExecutionNotFound = 1,
    [pbr::OriginalName("SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_FAILED_CAUSE_NAMESPACE_NOT_FOUND")] NamespaceNotFound = 2,
  }

  public enum ResourceExhaustedCause {
    [pbr::OriginalName("RESOURCE_EXHAUSTED_CAUSE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Caller exceeds request per second limit.
    /// </summary>
    [pbr::OriginalName("RESOURCE_EXHAUSTED_CAUSE_RPS_LIMIT")] RpsLimit = 1,
    /// <summary>
    /// Caller exceeds max concurrent request limit.
    /// </summary>
    [pbr::OriginalName("RESOURCE_EXHAUSTED_CAUSE_CONCURRENT_LIMIT")] ConcurrentLimit = 2,
    /// <summary>
    /// System overloaded.
    /// </summary>
    [pbr::OriginalName("RESOURCE_EXHAUSTED_CAUSE_SYSTEM_OVERLOADED")] SystemOverloaded = 3,
    /// <summary>
    /// Namespace exceeds persistence rate limit.
    /// </summary>
    [pbr::OriginalName("RESOURCE_EXHAUSTED_CAUSE_PERSISTENCE_LIMIT")] PersistenceLimit = 4,
  }

  #endregion

}

#endregion Designer generated code
