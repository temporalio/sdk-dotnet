// <auto-generated>
//     Generated. DO NOT EDIT!
// </auto-generated>
#pragma warning disable 8669
using System.Threading.Tasks;
using Temporalio.Api.OperatorService.V1;

namespace Temporalio.Client
{
    public abstract partial class OperatorService
    {
        /// <summary>
        /// Invoke AddOrUpdateRemoteCluster.
        /// </summary>
        /// <param name="req">Request for the call.</param>
        /// <param name="options">Optional RPC options.</param>
        /// <returns>RPC response</returns>
        public async Task<AddOrUpdateRemoteClusterResponse> AddOrUpdateRemoteClusterAsync(AddOrUpdateRemoteClusterRequest req, RpcOptions? options = null)
        {
            return await InvokeRpcAsync("AddOrUpdateRemoteCluster", req, AddOrUpdateRemoteClusterResponse.Parser, options);
        }

        /// <summary>
        /// Invoke AddSearchAttributes.
        /// </summary>
        /// <param name="req">Request for the call.</param>
        /// <param name="options">Optional RPC options.</param>
        /// <returns>RPC response</returns>
        public async Task<AddSearchAttributesResponse> AddSearchAttributesAsync(AddSearchAttributesRequest req, RpcOptions? options = null)
        {
            return await InvokeRpcAsync("AddSearchAttributes", req, AddSearchAttributesResponse.Parser, options);
        }

        /// <summary>
        /// Invoke DeleteNamespace.
        /// </summary>
        /// <param name="req">Request for the call.</param>
        /// <param name="options">Optional RPC options.</param>
        /// <returns>RPC response</returns>
        public async Task<DeleteNamespaceResponse> DeleteNamespaceAsync(DeleteNamespaceRequest req, RpcOptions? options = null)
        {
            return await InvokeRpcAsync("DeleteNamespace", req, DeleteNamespaceResponse.Parser, options);
        }

        /// <summary>
        /// Invoke ListClusters.
        /// </summary>
        /// <param name="req">Request for the call.</param>
        /// <param name="options">Optional RPC options.</param>
        /// <returns>RPC response</returns>
        public async Task<ListClustersResponse> ListClustersAsync(ListClustersRequest req, RpcOptions? options = null)
        {
            return await InvokeRpcAsync("ListClusters", req, ListClustersResponse.Parser, options);
        }

        /// <summary>
        /// Invoke ListSearchAttributes.
        /// </summary>
        /// <param name="req">Request for the call.</param>
        /// <param name="options">Optional RPC options.</param>
        /// <returns>RPC response</returns>
        public async Task<ListSearchAttributesResponse> ListSearchAttributesAsync(ListSearchAttributesRequest req, RpcOptions? options = null)
        {
            return await InvokeRpcAsync("ListSearchAttributes", req, ListSearchAttributesResponse.Parser, options);
        }

        /// <summary>
        /// Invoke RemoveRemoteCluster.
        /// </summary>
        /// <param name="req">Request for the call.</param>
        /// <param name="options">Optional RPC options.</param>
        /// <returns>RPC response</returns>
        public async Task<RemoveRemoteClusterResponse> RemoveRemoteClusterAsync(RemoveRemoteClusterRequest req, RpcOptions? options = null)
        {
            return await InvokeRpcAsync("RemoveRemoteCluster", req, RemoveRemoteClusterResponse.Parser, options);
        }

        /// <summary>
        /// Invoke RemoveSearchAttributes.
        /// </summary>
        /// <param name="req">Request for the call.</param>
        /// <param name="options">Optional RPC options.</param>
        /// <returns>RPC response</returns>
        public async Task<RemoveSearchAttributesResponse> RemoveSearchAttributesAsync(RemoveSearchAttributesRequest req, RpcOptions? options = null)
        {
            return await InvokeRpcAsync("RemoveSearchAttributes", req, RemoveSearchAttributesResponse.Parser, options);
        }
    }
}